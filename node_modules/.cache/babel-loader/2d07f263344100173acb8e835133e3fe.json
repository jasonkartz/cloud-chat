{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./index.css\";\nimport { auth, db } from \"./backend/firebase-config\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { collection, addDoc, doc, query, orderBy, limitToLast, serverTimestamp } from \"firebase/firestore\";\nimport { useDocumentData, useCollectionData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./components/Error\";\nimport Loading from \"./components/Loading\";\nimport SignIn from \"./components/SignIn\";\nimport DropMenu from \"./components/DropMenu\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport UserDisplay from \"./components/UserDisplay\";\nimport MessageForm from \"./components/MessageForm\";\nimport ChatMessage from \"./components/ChatMessage\";\nimport ChatList from \"./components/ChatList\";\nimport UserSettings from \"./components/user-settings-page/UserSettings\";\nimport CreateChat from \"./components/CreateChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /* user auth state - displays signin if auth state is false*/\n  const [user, userLoading, userError] = useAuthState(auth);\n  /* drop-down menu toggled from header */\n\n  const [openMenu, setOpenMenu] = useState(false);\n  /* room selected from chat room list */\n\n  const [roomSelection, setRoomSelection] = useState(\"PTY6qVozXSCkslCVg6ua\");\n  const [roomName, setRoomName] = useState(\"main lobby\");\n  const messagesRef = collection(db, `/publicChats/${roomSelection}/messages`);\n  const messagesQ = query(messagesRef, orderBy(\"createdAt\"), limitToLast(25));\n  const [messages, messagesLoading, messagesError] = useCollectionData(messagesQ, {\n    idField: \"id\"\n  });\n  /* message form */\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid\n    } = auth.currentUser;\n    await addDoc(messagesRef, {\n      text: formValue,\n      createdAt: serverTimestamp(),\n      uid\n    });\n    setFormValue(\"\");\n  };\n  /* scrolling chatroom to bottom */\n\n\n  const dummy = useRef();\n  useEffect(() => user && dummy.current.scrollIntoView({\n    behavior: \"smooth\"\n  }), [user]);\n  /* screen display in drop-down menu */\n\n  const [screen, setScreen] = useState(\"chat\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      user: user,\n      openMenu: openMenu,\n      setOpenMenu: setOpenMenu,\n      roomName: roomName,\n      children: user && /*#__PURE__*/_jsxDEV(UserDisplay, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropMenu, {\n      user: user,\n      openMenu: openMenu,\n      setOpenMenu: setOpenMenu,\n      setRoomSelection: setRoomSelection,\n      screen: screen,\n      setScreen: setScreen,\n      children: [screen === \"chat\" && /*#__PURE__*/_jsxDEV(ChatList, {\n        roomSelection: roomSelection,\n        setRoomSelection: setRoomSelection,\n        setOpenMenu: setOpenMenu,\n        setRoomName: setRoomName,\n        roomName: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), screen === \"create-chat\" && /*#__PURE__*/_jsxDEV(CreateChat, {\n        user: user,\n        roomSelection: roomSelection,\n        setRoomSelection: setRoomSelection,\n        setOpenMenu: setOpenMenu,\n        setRoomName: setRoomName,\n        roomName: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), screen === \"settings\" && /*#__PURE__*/_jsxDEV(UserSettings, {\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-box\",\n      children: [userLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }, this), userError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [messagesLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this), messagesError && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 31\n        }, this), messages && messages.map((message, index) => {\n          return /*#__PURE__*/_jsxDEV(ChatMessage, {\n            message: message\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 24\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-20\",\n          ref: dummy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(MessageForm, {\n      sendMessage: sendMessage,\n      formValue: formValue,\n      setFormValue: setFormValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ENvrYBiKLHUGV8Db/CN55ZdiwgE=\", false, function () {\n  return [useAuthState, useCollectionData];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/App.js"],"names":["auth","db","useAuthState","collection","addDoc","doc","query","orderBy","limitToLast","serverTimestamp","useDocumentData","useCollectionData","Error","Loading","SignIn","DropMenu","useState","useEffect","useRef","Header","UserDisplay","MessageForm","ChatMessage","ChatList","UserSettings","CreateChat","App","user","userLoading","userError","openMenu","setOpenMenu","roomSelection","setRoomSelection","roomName","setRoomName","messagesRef","messagesQ","messages","messagesLoading","messagesError","idField","formValue","setFormValue","sendMessage","e","preventDefault","uid","currentUser","text","createdAt","dummy","current","scrollIntoView","behavior","screen","setScreen","map","message","index"],"mappings":"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","sourcesContent":["import \"./index.css\";\nimport { auth, db } from \"./backend/firebase-config\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport {\n  collection,\n  addDoc,\n  doc,\n  query,\n  orderBy,\n  limitToLast,\n  serverTimestamp,\n} from \"firebase/firestore\";\nimport {\n  useDocumentData,\n  useCollectionData,\n} from \"react-firebase-hooks/firestore\";\nimport Error from \"./components/Error\";\nimport Loading from \"./components/Loading\";\nimport SignIn from \"./components/SignIn\";\nimport DropMenu from \"./components/DropMenu\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Header from \"./components/Header\";\nimport UserDisplay from \"./components/UserDisplay\";\nimport MessageForm from \"./components/MessageForm\";\nimport ChatMessage from \"./components/ChatMessage\";\nimport ChatList from \"./components/ChatList\";\nimport UserSettings from \"./components/user-settings-page/UserSettings\";\nimport CreateChat from \"./components/CreateChat\";\n\nfunction App() {\n  /* user auth state - displays signin if auth state is false*/\n  const [user, userLoading, userError] = useAuthState(auth);\n\n  /* drop-down menu toggled from header */\n  const [openMenu, setOpenMenu] = useState(false);\n\n  /* room selected from chat room list */\n  const [roomSelection, setRoomSelection] = useState(\"PTY6qVozXSCkslCVg6ua\");\n  const [roomName, setRoomName] = useState(\"main lobby\");\n\n  const messagesRef = collection(db, `/publicChats/${roomSelection}/messages`);\n  const messagesQ = query(messagesRef, orderBy(\"createdAt\"), limitToLast(25));\n  const [messages, messagesLoading, messagesError] = useCollectionData(\n    messagesQ,\n    {\n      idField: \"id\",\n    }\n  );\n\n  /* message form */\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid } = auth.currentUser;\n\n    await addDoc(messagesRef, {\n      text: formValue,\n      createdAt: serverTimestamp(),\n      uid,\n    });\n\n    setFormValue(\"\");\n  };\n\n  /* scrolling chatroom to bottom */\n  const dummy = useRef();\n\n  useEffect(\n    () => user && dummy.current.scrollIntoView({ behavior: \"smooth\" }),\n    [user]\n  );\n\n  /* screen display in drop-down menu */\n\n  const [screen, setScreen] = useState(\"chat\");\n\n  return (\n    <div className=\"main-container\">\n      <Header\n        user={user}\n        openMenu={openMenu}\n        setOpenMenu={setOpenMenu}\n        roomName={roomName}\n      >\n        {user && <UserDisplay user={user} />}\n      </Header>\n      <DropMenu\n        user={user}\n        openMenu={openMenu}\n        setOpenMenu={setOpenMenu}\n        setRoomSelection={setRoomSelection}\n        screen={screen}\n        setScreen={setScreen}\n      >\n        {screen === \"chat\" && (\n          <ChatList\n            roomSelection={roomSelection}\n            setRoomSelection={setRoomSelection}\n            setOpenMenu={setOpenMenu}\n            setRoomName={setRoomName}\n            roomName={roomName}\n          />\n        )}\n        {screen === \"create-chat\" && (\n          <CreateChat\n            user={user}\n            roomSelection={roomSelection}\n            setRoomSelection={setRoomSelection}\n            setOpenMenu={setOpenMenu}\n            setRoomName={setRoomName}\n            roomName={roomName}\n          />\n        )}\n        {screen === \"settings\" && <UserSettings user={user} />}\n      </DropMenu>\n      <div>Test</div>\n      <main className=\"main-box\">\n        {userLoading && <Loading />}\n        {userError && <Error />}\n        {user ? (\n          <>\n            {messagesLoading && <Loading />}\n            {messagesError && <Error />}\n            {messages &&\n              messages.map((message, index) => {\n                return <ChatMessage key={index} message={message} />;\n              })}\n\n            <div className=\"mt-20\" ref={dummy}></div>\n          </>\n        ) : (\n          <SignIn />\n        )}\n      </main>\n      {user && (\n        <MessageForm\n          sendMessage={sendMessage}\n          formValue={formValue}\n          setFormValue={setFormValue}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}