{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\CreateChat.js\",\n    _s = $RefreshSig$();\n\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, serverTimestamp, addDoc, setDoc, doc, updateDoc, deleteField, deleteDoc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateChat(_ref) {\n  _s();\n\n  let {\n    user,\n    chatSelection,\n    setChatSelection,\n    setChatName\n  } = _ref;\n  const [createChatName, setCreateChatName] = useState(\"\");\n  const [createChatStatus, setCreateChatStatus] = useState(\"\");\n  const accountRef = doc(db, \"accounts\", user.uid);\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\n  const publicChatsRef = collection(db, \"publicChats\");\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\n  const [publicChats, loading, error, snapshot] = useCollectionData(publicChatsQ);\n\n  const createRoom = async () => {\n    setCreateChatStatus(\"Creating room...\");\n    const newRoomRef = doc(collection(db, `publicChats`));\n    await setDoc(newRoomRef, {\n      createdAt: serverTimestamp(),\n      creator: account.name,\n      moderatorUID: user.uid,\n      name: createChatName,\n      id: newRoomRef.id\n    }).then(() => {\n      setCreateChatStatus(\"Opening room: \" + createChatName);\n      setChatSelection({\n        id: newRoomRef.id,\n        name: createChatName,\n        path: \"/publicChats/\" + newRoomRef.id + \"/messages\"\n      });\n      setCreateChatStatus(createChatName + \" is now live!\");\n      setCreateChatName(\"\");\n      setTimeout(() => setCreateChatStatus(\"\"), 5000);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"blue-heading\",\n      children: \"Create a chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter room name / topic\",\n      className: \"form-input\",\n      value: createChatName,\n      onChange: e => setCreateChatName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: createRoom,\n      disabled: !createChatName,\n      children: \"Create Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: createChatStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateChat, \"SzlvvORnWIdkqATsn42LvS6BX2A=\", false, function () {\n  return [useDocumentData, useCollectionData];\n});\n\n_c = CreateChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChat\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/CreateChat.js"],"names":["useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","serverTimestamp","addDoc","setDoc","doc","updateDoc","deleteField","deleteDoc","useState","useRef","useEffect","auth","db","CreateChat","user","chatSelection","setChatSelection","setChatName","createChatName","setCreateChatName","createChatStatus","setCreateChatStatus","accountRef","uid","account","accountLoading","accountError","publicChatsRef","publicChatsQ","publicChats","loading","error","snapshot","createRoom","newRoomRef","createdAt","creator","name","moderatorUID","id","then","path","setTimeout","e","target","value"],"mappings":"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","sourcesContent":["import {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  addDoc,\r\n  setDoc,\r\n  doc,\r\n  updateDoc,\r\n  deleteField,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\n\r\nexport default function CreateChat({\r\n  user,\r\n  chatSelection,\r\n  setChatSelection,\r\n  setChatName,\r\n}) {\r\n  const [createChatName, setCreateChatName] = useState(\"\");\r\n  const [createChatStatus, setCreateChatStatus] = useState(\"\");\r\n\r\n  const accountRef = doc(db, \"accounts\", user.uid);\r\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\r\n\r\n  const publicChatsRef = collection(db, \"publicChats\");\r\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [publicChats, loading, error, snapshot] =\r\n    useCollectionData(publicChatsQ);\r\n\r\n  const createRoom = async () => {\r\n    setCreateChatStatus(\"Creating room...\");\r\n    const newRoomRef = doc(collection(db, `publicChats`));\r\n    await setDoc(newRoomRef, {\r\n      createdAt: serverTimestamp(),\r\n      creator: account.name,\r\n      moderatorUID: user.uid,\r\n      name: createChatName,\r\n      id: newRoomRef.id,\r\n    }).then(() => {\r\n      setCreateChatStatus(\"Opening room: \" + createChatName);\r\n      setChatSelection({\r\n        id: newRoomRef.id,\r\n        name: createChatName,\r\n        path: \"/publicChats/\" + newRoomRef.id + \"/messages\",\r\n      });\r\n      setCreateChatStatus(createChatName + \" is now live!\");\r\n      setCreateChatName(\"\");\r\n      setTimeout(() => setCreateChatStatus(\"\"), 5000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"blue-heading\">Create a chat</h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter room name / topic\"\r\n        className=\"form-input\"\r\n        value={createChatName}\r\n        onChange={(e) => setCreateChatName(e.target.value)}\r\n      />\r\n      <button className=\"btn\" onClick={createRoom} disabled={!createChatName}>\r\n        Create Chat\r\n      </button>\r\n      <p>{createChatStatus}</p>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}