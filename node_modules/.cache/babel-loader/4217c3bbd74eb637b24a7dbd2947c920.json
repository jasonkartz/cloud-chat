{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\user-settings-page\\\\DeleteAccount.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { storage, auth } from \"../../backend/firebase-config\";\nimport { deleteUser } from \"firebase/auth\";\nimport { deleteDoc } from \"firebase/firestore\";\nimport { listAll, deleteObject, ref } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DeleteAccount(props) {\n  _s();\n\n  const currentUser = auth.currentUser;\n  const {\n    uid\n  } = currentUser;\n  const accountRef = props.accountRef;\n  const [display, setDisplay] = useState(false);\n  const [passwordForm, setPasswordForm] = useState(\"\");\n  const [deleteForm, setDeleteForm] = useState(\"\");\n  const [deleteStatus, setDeleteStatus] = useState(\"\");\n  const [deleteView, setDeleteView] = useState(false);\n\n  const deleteConfirm = async () => {\n    setDeleteStatus(\"Authenticating...\");\n    await props.reauthenticate(passwordForm);\n\n    if (deleteForm === \"DELETE\") {\n      setPasswordForm(\"\");\n      setDeleteView(true);\n      setDeleteStatus(\"Are you sure you want to delete your account? This will be permanent and cannot be recovered.\");\n    } else {\n      setDeleteStatus(\"Please type 'DELETE' in the box above before submitting.\");\n      setDeleteForm(\"\");\n      setTimeout(() => setDeleteStatus(\"\"), 5000);\n    }\n  };\n\n  const deleteCancel = () => {\n    setDeleteView(false);\n    setDeleteForm(\"\");\n    setDeleteStatus(\"Whew... that was a close one!\");\n    setTimeout(() => setDeleteStatus(\"\"), 5000);\n  };\n\n  const deleteAccount = async () => {\n    setDeleteStatus(\"Deleting account...\");\n    const userStorage = ref(storage, \"users/\" + uid);\n\n    if (userStorage) {\n      await listAll(userStorage).then(res => {\n        res.items.forEach(itemRef => {\n          deleteObject(itemRef);\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    await deleteUser(auth.currentUser).then(() => {\n      deleteDoc(accountRef);\n    }).catch(error => {\n      console.log(error.code + \" \" + error.message);\n      setDeleteStatus(\"Error deleting account. Please try again.\");\n      setDeleteForm(\"\");\n      setDeleteView(false);\n      setTimeout(() => setDeleteStatus(\"\"), 5000);\n    });\n  };\n\n  return props.providerIdList.includes(\"password\") && /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"border-b-2 border-blue-200 settings-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"blue-heading hover:cursor-pointer hover:text-blue-500\",\n      onClick: () => setDisplay(!display),\n      children: [\"Delete Account\", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `ri-arrow-${display ? \"up\" : \"down\"}-s-line align-sub`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), display && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [!deleteView && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type DELETE in all caps\",\n          className: \"form-input\",\n          value: deleteForm,\n          onChange: e => setDeleteForm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          className: \"form-input\",\n          value: passwordForm.delete,\n          onChange: e => setPasswordForm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          disabled: !deleteForm || !passwordForm,\n          onClick: deleteConfirm,\n          children: \"Delete Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: deleteStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), deleteView && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 pb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: deleteAccount,\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: deleteCancel,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DeleteAccount, \"rUbzcMVA/9Y553ehioWYUpRwnOg=\");\n\n_c = DeleteAccount;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeleteAccount\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/user-settings-page/DeleteAccount.js"],"names":["useState","storage","auth","deleteUser","deleteDoc","listAll","deleteObject","ref","DeleteAccount","props","currentUser","uid","accountRef","display","setDisplay","passwordForm","setPasswordForm","deleteForm","setDeleteForm","deleteStatus","setDeleteStatus","deleteView","setDeleteView","deleteConfirm","reauthenticate","setTimeout","deleteCancel","deleteAccount","userStorage","then","res","items","forEach","itemRef","catch","error","console","log","code","message","providerIdList","includes","e","target","value","delete"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { storage, auth } from \"../../backend/firebase-config\";\r\nimport { deleteUser } from \"firebase/auth\";\r\nimport { deleteDoc } from \"firebase/firestore\";\r\nimport { listAll, deleteObject, ref } from \"firebase/storage\";\r\n\r\nexport default function DeleteAccount(props) {\r\n  const currentUser = auth.currentUser;\r\n  const { uid } = currentUser;\r\n  const accountRef = props.accountRef;\r\n\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const [passwordForm, setPasswordForm] = useState(\"\");\r\n\r\n  const [deleteForm, setDeleteForm] = useState(\"\");\r\n  const [deleteStatus, setDeleteStatus] = useState(\"\");\r\n  const [deleteView, setDeleteView] = useState(false);\r\n\r\n  const deleteConfirm = async () => {\r\n    setDeleteStatus(\"Authenticating...\");\r\n\r\n    await props.reauthenticate(passwordForm);\r\n\r\n    if (deleteForm === \"DELETE\") {\r\n      setPasswordForm(\"\");\r\n      setDeleteView(true);\r\n      setDeleteStatus(\r\n        \"Are you sure you want to delete your account? This will be permanent and cannot be recovered.\"\r\n      );\r\n    } else {\r\n      setDeleteStatus(\r\n        \"Please type 'DELETE' in the box above before submitting.\"\r\n      );\r\n      setDeleteForm(\"\");\r\n      setTimeout(() => setDeleteStatus(\"\"), 5000);\r\n    }\r\n  };\r\n\r\n  const deleteCancel = () => {\r\n    setDeleteView(false);\r\n    setDeleteForm(\"\");\r\n    setDeleteStatus(\"Whew... that was a close one!\");\r\n    setTimeout(() => setDeleteStatus(\"\"), 5000);\r\n  };\r\n\r\n  const deleteAccount = async () => {\r\n    setDeleteStatus(\"Deleting account...\");\r\n    const userStorage = ref(storage, \"users/\" + uid);\r\n    if (userStorage) {\r\n      await listAll(userStorage)\r\n        .then((res) => {\r\n          res.items.forEach((itemRef) => {\r\n            deleteObject(itemRef);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n    await deleteUser(auth.currentUser)\r\n      .then(() => {\r\n        deleteDoc(accountRef);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.code + \" \" + error.message);\r\n        setDeleteStatus(\"Error deleting account. Please try again.\");\r\n        setDeleteForm(\"\");\r\n        setDeleteView(false);\r\n        setTimeout(() => setDeleteStatus(\"\"), 5000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    props.providerIdList.includes(\"password\") && (\r\n      <section className=\"border-b-2 border-blue-200 settings-section\">\r\n        <h2\r\n          className=\"blue-heading hover:cursor-pointer hover:text-blue-500\"\r\n          onClick={() => setDisplay(!display)}\r\n        >\r\n          Delete Account\r\n          <i\r\n            className={`ri-arrow-${display ? \"up\" : \"down\"}-s-line align-sub`}\r\n          ></i>\r\n        </h2>\r\n        {display && (\r\n          <>\r\n            {!deleteView && (\r\n              <>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Type DELETE in all caps\"\r\n                  className=\"form-input\"\r\n                  value={deleteForm}\r\n                  onChange={(e) => setDeleteForm(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  className=\"form-input\"\r\n                  value={passwordForm.delete}\r\n                  onChange={(e) => setPasswordForm(e.target.value)}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn\"\r\n                  disabled={!deleteForm || !passwordForm}\r\n                  onClick={deleteConfirm}\r\n                >\r\n                  Delete Account\r\n                </button>\r\n              </>\r\n            )}\r\n            \r\n            <p>{deleteStatus}</p>\r\n\r\n            {deleteView && (\r\n              <div className=\"flex gap-2 pb-8\">\r\n                <button className=\"btn\" onClick={deleteAccount}>\r\n                  Yes\r\n                </button>\r\n                <button className=\"btn\" onClick={deleteCancel}>\r\n                  No\r\n                </button>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </section>\r\n    )\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}