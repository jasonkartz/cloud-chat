{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport defaultPic from \"../images/cloud-fill.png\";\nimport { doc, getDoc, collection, updateDoc, arrayRemove, arrayUnion } from \"firebase/firestore\";\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\nimport { useState } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Profile(_ref) {\n  _s();\n\n  let {\n    user,\n    accountSelection,\n    setAccountSelection,\n    setScreen\n  } = _ref;\n  const [openFollowList, setOpenFollowList] = useState(false);\n  const [selectFollowList, setSelectFollowList] = useState(\"following\");\n  const selectedAccountRef = doc(db, \"accounts\", accountSelection);\n  const [selectedAccount, selectedAccountLoading, selectedAccountError] = useDocumentData(selectedAccountRef);\n  const userAccountRef = doc(db, \"accounts\", user.uid);\n  const [userAccount, userLoading, userError] = useDocumentData(userAccountRef);\n\n  const followUser = () => {\n    updateDoc(userAccountRef, {\n      following: arrayUnion(selectedAccount.uid)\n    });\n    updateDoc(selectedAccountRef, {\n      followers: arrayUnion(user.uid)\n    });\n  };\n\n  const unFollowUser = () => {\n    updateDoc(userAccountRef, {\n      following: arrayRemove(selectedAccount.uid)\n    });\n    updateDoc(selectedAccountRef, {\n      followers: arrayRemove(user.uid)\n    });\n  };\n\n  if (selectedAccountLoading || userLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else if (selectedAccountError || userError) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }, this);\n  } else {\n    const followCheck = userAccount.following.includes(selectedAccount.uid);\n    const followBackCheck = selectedAccount.following.includes(userAccount.uid);\n    const followDisplay = followCheck && followBackCheck ? \"Following eachother\" : followCheck ? \"Following\" : followBackCheck ? \"Follows you\" : \"\";\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"blue-heading\",\n          children: selectedAccount.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm italic\",\n          children: followDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !openFollowList && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hover:cursor-pointer\",\n            onClick: () => setOpenFollowList(true),\n            children: [\"Followers\", \" \", selectedAccount.followers ? selectedAccount.followers.length : \"0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hover:cursor-pointer\",\n            onClick: () => setOpenFollowList(true),\n            children: [\"Following\", \" \", selectedAccount.following ? selectedAccount.following.length : \"0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: selectedAccount.photoURL || defaultPic,\n          alt: \"user\",\n          width: \"100\",\n          className: \"rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), selectedAccount.uid !== user.uid && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"flex items-center gap-1 btn\",\n          onClick: followCheck ? unFollowUser : followUser,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `ri-user-${followCheck ? \"unfollow\" : \"follow\"}-line`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: followCheck ? \"Unfollow\" : \"Follow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last Login:\", \" \", selectedAccount.lastLogin && selectedAccount.lastLogin.toDate().toDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), selectedAccount.uid !== user.uid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"flex items-center gap-1 hover:cursor-pointer hover:text-blue-500\",\n          onClick: () => setScreen(\"users\"),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"text-lg font-bold ri-arrow-go-back-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), openFollowList && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-5\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Follow List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setOpenFollowList(false),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"ri-close-circle-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: selectedAccount[selectFollowList].map((uid, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: uid\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Profile, \"UmSvnJe94s+YpxJIMY1IPtJkxA8=\", false, function () {\n  return [useDocumentData, useDocumentData];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/UserProfile.js"],"names":["defaultPic","doc","getDoc","collection","updateDoc","arrayRemove","arrayUnion","useDocumentData","useState","auth","db","Loading","Error","Profile","user","accountSelection","setAccountSelection","setScreen","openFollowList","setOpenFollowList","selectFollowList","setSelectFollowList","selectedAccountRef","selectedAccount","selectedAccountLoading","selectedAccountError","userAccountRef","uid","userAccount","userLoading","userError","followUser","following","followers","unFollowUser","followCheck","includes","followBackCheck","followDisplay","name","length","photoURL","lastLogin","toDate","toDateString","map","index"],"mappings":"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","sourcesContent":["import defaultPic from \"../images/cloud-fill.png\";\r\nimport {\r\n  doc,\r\n  getDoc,\r\n  collection,\r\n  updateDoc,\r\n  arrayRemove,\r\n  arrayUnion,\r\n} from \"firebase/firestore\";\r\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\r\nimport { useState } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\n\r\nexport default function Profile({\r\n  user,\r\n  accountSelection,\r\n  setAccountSelection,\r\n  setScreen,\r\n}) {\r\n  const [openFollowList, setOpenFollowList] = useState(false);\r\n  const [selectFollowList, setSelectFollowList] = useState(\"following\");\r\n\r\n  const selectedAccountRef = doc(db, \"accounts\", accountSelection);\r\n  const [selectedAccount, selectedAccountLoading, selectedAccountError] =\r\n    useDocumentData(selectedAccountRef);\r\n\r\n  const userAccountRef = doc(db, \"accounts\", user.uid);\r\n  const [userAccount, userLoading, userError] = useDocumentData(userAccountRef);\r\n\r\n  const followUser = () => {\r\n    updateDoc(userAccountRef, {\r\n      following: arrayUnion(selectedAccount.uid),\r\n    });\r\n\r\n    updateDoc(selectedAccountRef, {\r\n      followers: arrayUnion(user.uid),\r\n    });\r\n  };\r\n\r\n  const unFollowUser = () => {\r\n    updateDoc(userAccountRef, {\r\n      following: arrayRemove(selectedAccount.uid),\r\n    });\r\n\r\n    updateDoc(selectedAccountRef, {\r\n      followers: arrayRemove(user.uid),\r\n    });\r\n  };\r\n\r\n  if (selectedAccountLoading || userLoading) {\r\n    return <Loading />;\r\n  } else if (selectedAccountError || userError) {\r\n    return <Error />;\r\n  } else {\r\n    const followCheck = userAccount.following.includes(selectedAccount.uid);\r\n    const followBackCheck = selectedAccount.following.includes(userAccount.uid);\r\n\r\n    const followDisplay =\r\n      followCheck && followBackCheck\r\n        ? \"Following eachother\"\r\n        : followCheck\r\n        ? \"Following\"\r\n        : followBackCheck\r\n        ? \"Follows you\"\r\n        : \"\";\r\n\r\n    return (\r\n      <section className=\"settings-section\">\r\n        <div className=\"\">\r\n          <h1 className=\"blue-heading\">{selectedAccount.name}</h1>\r\n          <p className=\"text-sm italic\">{followDisplay}</p>\r\n        </div>\r\n\r\n        {/* Default screen */}\r\n\r\n        {!openFollowList && (\r\n          <>\r\n            <p className=\"font-bold\">\r\n              <span\r\n                className=\"hover:cursor-pointer\"\r\n                onClick={() => setOpenFollowList(true)}\r\n              >\r\n                Followers{\" \"}\r\n                {selectedAccount.followers\r\n                  ? selectedAccount.followers.length\r\n                  : \"0\"}\r\n              </span>{\" \"}\r\n              |{\" \"}\r\n              <span\r\n                className=\"hover:cursor-pointer\"\r\n                onClick={() => setOpenFollowList(true)}\r\n              >\r\n                Following{\" \"}\r\n                {selectedAccount.following\r\n                  ? selectedAccount.following.length\r\n                  : \"0\"}\r\n              </span>\r\n            </p>\r\n\r\n            <img\r\n              src={selectedAccount.photoURL || defaultPic}\r\n              alt=\"user\"\r\n              width=\"100\"\r\n              className=\"rounded\"\r\n            />\r\n\r\n            {selectedAccount.uid !== user.uid && (\r\n              <button\r\n                className=\"flex items-center gap-1 btn\"\r\n                onClick={followCheck ? unFollowUser : followUser}\r\n              >\r\n                <i\r\n                  className={`ri-user-${\r\n                    followCheck ? \"unfollow\" : \"follow\"\r\n                  }-line`}\r\n                ></i>\r\n                <span>{followCheck ? \"Unfollow\" : \"Follow\"}</span>\r\n              </button>\r\n            )}\r\n            <p>\r\n              Last Login:{\" \"}\r\n              {selectedAccount.lastLogin &&\r\n                selectedAccount.lastLogin.toDate().toDateString()}\r\n            </p>\r\n\r\n            {selectedAccount.uid !== user.uid && (\r\n              <p\r\n                className=\"flex items-center gap-1 hover:cursor-pointer hover:text-blue-500\"\r\n                onClick={() => setScreen(\"users\")}\r\n              >\r\n                <i className=\"text-lg font-bold ri-arrow-go-back-line\"></i>\r\n                <span> Go Back</span>\r\n              </p>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {/* Follower/Following Screen */}\r\n\r\n        {openFollowList && (\r\n          <>\r\n            <div className=\"flex gap-5\">\r\n              {\" \"}\r\n              <h1>Follow List</h1>\r\n              <button onClick={() => setOpenFollowList(false)}>\r\n                <i className=\"ri-close-circle-line\"></i>\r\n              </button>\r\n            </div>\r\n            <ul>\r\n              {selectedAccount[selectFollowList].map((uid, index) => {\r\n\r\n                return <li key={index}>\r\n                  {uid}\r\n                </li>\r\n              })}\r\n            </ul>\r\n          </>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}