{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\CreateChat.js\",\n    _s = $RefreshSig$();\n\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, serverTimestamp, addDoc, doc, updateDoc, deleteField, deleteDoc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateChat(_ref) {\n  _s();\n\n  let {\n    user,\n    roomSelection,\n    setRoomSelection,\n    setRoomName\n  } = _ref;\n  const [createRoomName, setCreateRoomName] = useState(\"\");\n  const [createRoomStatus, setCreateRoomStatus] = useState(\"\");\n  const [selectedRoomToDelete, setSelectedRoomToDelete] = useState(\"\");\n  const [confirmDelete, setConfirmDelete] = useState(\"\");\n  const [deleteStatus, setDeleteStatus] = useState(!selectedRoomToDelete ? \"Select a room below\" : \"Type 'DELETE' below, then click 'Delete'\");\n  const accountRef = doc(db, \"accounts\", user.uid);\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\n  const publicChatsRef = collection(db, \"publicChats\");\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\n  const [publicChats, loading, error, snapshot] = useCollectionData(publicChatsQ);\n\n  const createRoom = async () => {\n    setCreateRoomStatus(\"Creating room...\");\n    await addDoc(collection(db, `publicChats`), {\n      createdAt: serverTimestamp(),\n      creator: account.name,\n      moderatorUID: user.uid,\n      name: createRoomName\n    }).then(() => {\n      setCreateRoomStatus(\"Opening room: \" + createRoomName);\n      setRoomSelection(createRoomName);\n      setRoomName(createRoomName);\n      setCreateRoomStatus(createRoomName + \" is now live!\");\n      setCreateRoomName(\"\");\n      setTimeout(() => setCreateRoomStatus(\"\"), 5000);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"border-b-2 border-blue-200 settings-section \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading\",\n        children: \"Create a chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter room name / topic\",\n        className: \"form-input\",\n        value: createRoomName,\n        onChange: e => setCreateRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: createRoom,\n        disabled: !createRoomName,\n        children: \"Create Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: createRoomStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateChat, \"KKsNjdTqEeiY3ECLNnWBl4xeREk=\", false, function () {\n  return [useDocumentData, useCollectionData];\n});\n\n_c = CreateChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChat\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/CreateChat.js"],"names":["useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","serverTimestamp","addDoc","doc","updateDoc","deleteField","deleteDoc","useState","useRef","useEffect","auth","db","CreateChat","user","roomSelection","setRoomSelection","setRoomName","createRoomName","setCreateRoomName","createRoomStatus","setCreateRoomStatus","selectedRoomToDelete","setSelectedRoomToDelete","confirmDelete","setConfirmDelete","deleteStatus","setDeleteStatus","accountRef","uid","account","accountLoading","accountError","publicChatsRef","publicChatsQ","publicChats","loading","error","snapshot","createRoom","createdAt","creator","name","moderatorUID","then","setTimeout","e","target","value"],"mappings":";;;AAAA,SACEA,iBADF,EAEEC,eAFF,QAGO,gCAHP;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,eALF,EAMEC,MANF,EAOEC,GAPF,EAQEC,SARF,EASEC,WATF,EAUEC,SAVF,QAWO,oBAXP;AAYA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,4BAAzB;;;AAEA,eAAe,SAASC,UAAT,OAKZ;AAAA;;AAAA,MALgC;AACjCC,IAAAA,IADiC;AAEjCC,IAAAA,aAFiC;AAGjCC,IAAAA,gBAHiC;AAIjCC,IAAAA;AAJiC,GAKhC;AACD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAACc,oBAAD,EAAuBC,uBAAvB,IAAkDf,QAAQ,CAAC,EAAD,CAAhE;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkCnB,QAAQ,CAAC,CAACc,oBAAD,GAC7C,qBAD6C,GAE7C,0CAF4C,CAAhD;AAIA,QAAMM,UAAU,GAAGxB,GAAG,CAACQ,EAAD,EAAK,UAAL,EAAiBE,IAAI,CAACe,GAAtB,CAAtB;AACA,QAAM,CAACC,OAAD,EAAUC,cAAV,EAA0BC,YAA1B,IAA0CrC,eAAe,CAACiC,UAAD,CAA/D;AAEA,QAAMK,cAAc,GAAGnC,UAAU,CAACc,EAAD,EAAK,aAAL,CAAjC;AACA,QAAMsB,YAAY,GAAGlC,KAAK,CAACiC,cAAD,EAAiBlC,OAAO,CAAC,MAAD,CAAxB,EAAkCE,WAAW,CAAC,EAAD,CAA7C,CAA1B;AACA,QAAM,CAACkC,WAAD,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,QAA9B,IACJ5C,iBAAiB,CAACwC,YAAD,CADnB;;AAGA,QAAMK,UAAU,GAAG,YAAY;AAC7BlB,IAAAA,mBAAmB,CAAC,kBAAD,CAAnB;AACA,UAAMlB,MAAM,CAACL,UAAU,CAACc,EAAD,EAAM,aAAN,CAAX,EAAgC;AAC1C4B,MAAAA,SAAS,EAAEtC,eAAe,EADgB;AAE1CuC,MAAAA,OAAO,EAAEX,OAAO,CAACY,IAFyB;AAG1CC,MAAAA,YAAY,EAAE7B,IAAI,CAACe,GAHuB;AAI1Ca,MAAAA,IAAI,EAAExB;AAJoC,KAAhC,CAAN,CAKH0B,IALG,CAKE,MAAM;AACZvB,MAAAA,mBAAmB,CAAC,mBAAmBH,cAApB,CAAnB;AACAF,MAAAA,gBAAgB,CAACE,cAAD,CAAhB;AACAD,MAAAA,WAAW,CAACC,cAAD,CAAX;AACAG,MAAAA,mBAAmB,CAACH,cAAc,GAAG,eAAlB,CAAnB;AACAC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACA0B,MAAAA,UAAU,CAAC,MAAMxB,mBAAmB,CAAC,EAAD,CAA1B,EAAgC,IAAhC,CAAV;AACD,KAZK,CAAN;AAaD,GAfD;;AAiBA,sBACE;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,8CAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,yBAFd;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,KAAK,EAAEH,cAJT;AAKE,QAAA,QAAQ,EAAG4B,CAAD,IAAO3B,iBAAiB,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV;AALpC;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAET,UAAjC;AAA6C,QAAA,QAAQ,EAAE,CAACrB,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE;AAAA,kBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmBD;;GA3DuBP,U;UAgB0BlB,e,EAK9CD,iB;;;KArBoBmB,U","sourcesContent":["import {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n  updateDoc,\r\n  deleteField,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\n\r\nexport default function CreateChat({\r\n  user,\r\n  roomSelection,\r\n  setRoomSelection,\r\n  setRoomName,\r\n}) {\r\n  const [createRoomName, setCreateRoomName] = useState(\"\");\r\n  const [createRoomStatus, setCreateRoomStatus] = useState(\"\");\r\n\r\n  const [selectedRoomToDelete, setSelectedRoomToDelete] = useState(\"\");\r\n  const [confirmDelete, setConfirmDelete] = useState(\"\");\r\n  const [deleteStatus, setDeleteStatus] = useState(!selectedRoomToDelete\r\n    ? \"Select a room below\"\r\n    : \"Type 'DELETE' below, then click 'Delete'\");\r\n\r\n  const accountRef = doc(db, \"accounts\", user.uid);\r\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\r\n\r\n  const publicChatsRef = collection(db, \"publicChats\");\r\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [publicChats, loading, error, snapshot] =\r\n    useCollectionData(publicChatsQ);\r\n\r\n  const createRoom = async () => {\r\n    setCreateRoomStatus(\"Creating room...\");\r\n    await addDoc(collection(db, `publicChats`), {\r\n      createdAt: serverTimestamp(),\r\n      creator: account.name,\r\n      moderatorUID: user.uid,\r\n      name: createRoomName,\r\n    }).then(() => {\r\n      setCreateRoomStatus(\"Opening room: \" + createRoomName);\r\n      setRoomSelection(createRoomName);\r\n      setRoomName(createRoomName);\r\n      setCreateRoomStatus(createRoomName + \" is now live!\");\r\n      setCreateRoomName(\"\");\r\n      setTimeout(() => setCreateRoomStatus(\"\"), 5000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"border-b-2 border-blue-200 settings-section \">\r\n        <h2 className=\"blue-heading\">Create a chat</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter room name / topic\"\r\n          className=\"form-input\"\r\n          value={createRoomName}\r\n          onChange={(e) => setCreateRoomName(e.target.value)}\r\n        />\r\n        <button className=\"btn\" onClick={createRoom} disabled={!createRoomName}>\r\n          Create Chat\r\n        </button>\r\n        <p>{createRoomStatus}</p>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}