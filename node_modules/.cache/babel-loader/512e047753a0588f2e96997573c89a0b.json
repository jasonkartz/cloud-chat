{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\CreateChat.js\",\n    _s = $RefreshSig$();\n\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, serverTimestamp, addDoc, doc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport { async } from \"@firebase/util\";\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateChat(_ref) {\n  _s();\n\n  let {\n    user,\n    roomSelection,\n    setRoomSelection,\n    setRoomName\n  } = _ref;\n  const [createRoomName, setCreateRoomName] = useState(\"\");\n  const [createRoomStatus, setCreateRoomStatus] = useState(\"\");\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\n  const accountRef = doc(db, \"accounts\", user.uid);\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\n  const publicChatsRef = collection(db, \"publicChats\");\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\n  const [publicChats, loading, error, snapshot] = useCollectionData(publicChatsQ);\n\n  const createRoom = async () => {\n    setCreateRoomStatus(\"Creating room...\");\n    await addDoc(collection(db, `publicChats`), {\n      createdAt: serverTimestamp(),\n      creator: account.name,\n      moderatorUID: user.uid,\n      name: createRoomName\n    }).then(() => {\n      setCreateRoomStatus(\"Opening room: \" + createRoomName);\n      setRoomSelection(createRoomName);\n      setRoomName(createRoomName);\n      setCreateRoomStatus(createRoomName + \" is now live!\");\n      setCreateRoomName(\"\");\n      setTimeout(() => setCreateRoomStatus(\"\"), 5000);\n    });\n  };\n\n  const deleteRoom = async () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"border-b-2 border-blue-200 settings-section \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading\",\n        children: \"Create a chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter room name / topic\",\n        className: \"form-input\",\n        value: createRoomName,\n        onChange: e => setCreateRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: createRoom,\n        disabled: !createRoomName,\n        children: \"Create Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: createRoomStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading\",\n        children: \"Delete a chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: deleteRoom,\n        disabled: !selectedRoom,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), publicChats && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: publicChats.map((chatroom, index) => chatroom.moderatorUID === user.uid && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `rounded px-1 hover:cursor-pointer hover:bg-blue-50/50 hover:text-blue-600`,\n          onClick: () => {\n            setSelectedRoom(chatroom.index);\n            console.log(chatroom.index);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: chatroom.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateChat, \"fxQ99d/neFOh89A+sXXZ6LSuSCU=\", false, function () {\n  return [useDocumentData, useCollectionData];\n});\n\n_c = CreateChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChat\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/CreateChat.js"],"names":["useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","serverTimestamp","addDoc","doc","useState","useRef","useEffect","auth","db","async","unstable_renderSubtreeIntoContainer","CreateChat","user","roomSelection","setRoomSelection","setRoomName","createRoomName","setCreateRoomName","createRoomStatus","setCreateRoomStatus","selectedRoom","setSelectedRoom","accountRef","uid","account","accountLoading","accountError","publicChatsRef","publicChatsQ","publicChats","loading","error","snapshot","createRoom","createdAt","creator","name","moderatorUID","then","setTimeout","deleteRoom","e","target","value","map","chatroom","index","console","log"],"mappings":";;;AAAA,SACEA,iBADF,EAEEC,eAFF,QAGO,gCAHP;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,eALF,EAMEC,MANF,EAOEC,GAPF,QAQO,oBARP;AASA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,4BAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,mCAAT,QAAoD,WAApD;;;AAEA,eAAe,SAASC,UAAT,OAKZ;AAAA;;AAAA,MALgC;AACjCC,IAAAA,IADiC;AAEjCC,IAAAA,aAFiC;AAGjCC,IAAAA,gBAHiC;AAIjCC,IAAAA;AAJiC,GAKhC;AACD,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCb,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0Cf,QAAQ,CAAC,EAAD,CAAxD;AAEA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMkB,UAAU,GAAGnB,GAAG,CAACK,EAAD,EAAK,UAAL,EAAiBI,IAAI,CAACW,GAAtB,CAAtB;AACA,QAAM,CAACC,OAAD,EAAUC,cAAV,EAA0BC,YAA1B,IAA0ChC,eAAe,CAAC4B,UAAD,CAA/D;AAEA,QAAMK,cAAc,GAAG9B,UAAU,CAACW,EAAD,EAAK,aAAL,CAAjC;AACA,QAAMoB,YAAY,GAAG7B,KAAK,CAAC4B,cAAD,EAAiB7B,OAAO,CAAC,MAAD,CAAxB,EAAkCE,WAAW,CAAC,EAAD,CAA7C,CAA1B;AACA,QAAM,CAAC6B,WAAD,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,QAA9B,IACJvC,iBAAiB,CAACmC,YAAD,CADnB;;AAGA,QAAMK,UAAU,GAAG,YAAY;AAC7Bd,IAAAA,mBAAmB,CAAC,kBAAD,CAAnB;AACA,UAAMjB,MAAM,CAACL,UAAU,CAACW,EAAD,EAAM,aAAN,CAAX,EAAgC;AAC1C0B,MAAAA,SAAS,EAAEjC,eAAe,EADgB;AAE1CkC,MAAAA,OAAO,EAAEX,OAAO,CAACY,IAFyB;AAG1CC,MAAAA,YAAY,EAAEzB,IAAI,CAACW,GAHuB;AAI1Ca,MAAAA,IAAI,EAAEpB;AAJoC,KAAhC,CAAN,CAKHsB,IALG,CAKE,MAAM;AACZnB,MAAAA,mBAAmB,CAAC,mBAAmBH,cAApB,CAAnB;AACAF,MAAAA,gBAAgB,CAACE,cAAD,CAAhB;AACAD,MAAAA,WAAW,CAACC,cAAD,CAAX;AACAG,MAAAA,mBAAmB,CAACH,cAAc,GAAG,eAAlB,CAAnB;AACAC,MAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAsB,MAAAA,UAAU,CAAC,MAAMpB,mBAAmB,CAAC,EAAD,CAA1B,EAAgC,IAAhC,CAAV;AACD,KAZK,CAAN;AAaD,GAfD;;AAiBA,QAAMqB,UAAU,GAAG,YAAY,CAE9B,CAFD;;AAIA,sBACE;AAAA,4BACE;AAAS,MAAA,SAAS,EAAC,8CAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,yBAFd;AAGE,QAAA,SAAS,EAAC,YAHZ;AAIE,QAAA,KAAK,EAAExB,cAJT;AAKE,QAAA,QAAQ,EAAGyB,CAAD,IAAOxB,iBAAiB,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV;AALpC;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEV,UAAjC;AAA6C,QAAA,QAAQ,EAAE,CAACjB,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAaE;AAAA,kBAAIE;AAAJ;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAS,MAAA,SAAS,EAAC,kBAAnB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEsB,UAAjC;AAA6C,QAAA,QAAQ,EAAE,CAACpB,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAKGS,WAAW,iBACV;AAAA,kBACGA,WAAW,CAACe,GAAZ,CACC,CAACC,QAAD,EAAWC,KAAX,KACED,QAAQ,CAACR,YAAT,KAA0BzB,IAAI,CAACW,GAA/B,iBACE;AACE,UAAA,SAAS,EAAG,2EADd;AAGE,UAAA,OAAO,EAAE,MAAM;AAACF,YAAAA,eAAe,CAACwB,QAAQ,CAACC,KAAV,CAAf;AAChBC,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,KAArB;AAA4B,WAJ9B;AAAA,iCAME;AAAA,sBAAOD,QAAQ,CAACT;AAAhB;AAAA;AAAA;AAAA;AAAA;AANF,WAEOU,KAFP;AAAA;AAAA;AAAA;AAAA,gBAHL;AADH;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AA0CD;;GAlFuBnC,U;UAY0BjB,e,EAK9CD,iB;;;KAjBoBkB,U","sourcesContent":["import {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\nimport { async } from \"@firebase/util\";\r\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\r\n\r\nexport default function CreateChat({\r\n  user,\r\n  roomSelection,\r\n  setRoomSelection,\r\n  setRoomName,\r\n}) {\r\n  const [createRoomName, setCreateRoomName] = useState(\"\");\r\n  const [createRoomStatus, setCreateRoomStatus] = useState(\"\");\r\n\r\n  const [selectedRoom, setSelectedRoom] = useState(\"\");\r\n\r\n  const accountRef = doc(db, \"accounts\", user.uid);\r\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\r\n\r\n  const publicChatsRef = collection(db, \"publicChats\");\r\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [publicChats, loading, error, snapshot] =\r\n    useCollectionData(publicChatsQ);\r\n\r\n  const createRoom = async () => {\r\n    setCreateRoomStatus(\"Creating room...\");\r\n    await addDoc(collection(db, `publicChats`), {\r\n      createdAt: serverTimestamp(),\r\n      creator: account.name,\r\n      moderatorUID: user.uid,\r\n      name: createRoomName,\r\n    }).then(() => {\r\n      setCreateRoomStatus(\"Opening room: \" + createRoomName);\r\n      setRoomSelection(createRoomName);\r\n      setRoomName(createRoomName);\r\n      setCreateRoomStatus(createRoomName + \" is now live!\");\r\n      setCreateRoomName(\"\");\r\n      setTimeout(() => setCreateRoomStatus(\"\"), 5000);\r\n    });\r\n  };\r\n\r\n  const deleteRoom = async () => {\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"border-b-2 border-blue-200 settings-section \">\r\n        <h2 className=\"blue-heading\">Create a chat</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter room name / topic\"\r\n          className=\"form-input\"\r\n          value={createRoomName}\r\n          onChange={(e) => setCreateRoomName(e.target.value)}\r\n        />\r\n        <button className=\"btn\" onClick={createRoom} disabled={!createRoomName}>\r\n          Create Chat\r\n        </button>\r\n        <p>{createRoomStatus}</p>\r\n      </section>\r\n      <section className=\"settings-section\">\r\n        <h2 className=\"blue-heading\">Delete a chat</h2>\r\n        <button className=\"btn\" onClick={deleteRoom} disabled={!selectedRoom}>\r\n          Delete\r\n        </button>\r\n        {publicChats && (\r\n          <ul>\r\n            {publicChats.map(\r\n              (chatroom, index) =>\r\n                chatroom.moderatorUID === user.uid && (\r\n                  <li\r\n                    className={`rounded px-1 hover:cursor-pointer hover:bg-blue-50/50 hover:text-blue-600`}\r\n                    key={index}\r\n                    onClick={() => {setSelectedRoom(chatroom.index)\r\n                    console.log(chatroom.index)}}\r\n                  >\r\n                    <span>{chatroom.name}</span>\r\n                  </li>\r\n                )\r\n            )}\r\n          </ul>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}