{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\user-settings-page\\\\UserSettings.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { reauthenticateWithCredential, EmailAuthProvider } from \"firebase/auth\";\nimport { doc } from \"firebase/firestore\";\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\nimport { auth, db } from \"../../backend/firebase-config\";\nimport UpdateProfileImage from \"./UpdateProfileImage\";\nimport UpdateUserName from \"./UpdateUserName\";\nimport UpdateName from \"./UpdateName\";\nimport UpdateEmail from \"./UpdateEmail\";\nimport UpdatePassword from \"./UpdatePassword\";\nimport DeleteAccount from \"./DeleteAccount\";\nimport AddSignin from \"./AddSignin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserSettings() {\n  _s();\n\n  const currentUser = auth.currentUser;\n  const {\n    uid,\n    email\n  } = currentUser;\n  const accountRef = doc(db, \"accounts\", uid);\n  const [account, loading, error] = useDocumentData(accountRef);\n  const [keyForRemount, setKeyForRemount] = useState(1);\n  /* collect all sign-in poviders linked to user */\n\n  const providerIdList = [];\n\n  if (currentUser !== null) {\n    currentUser.providerData.forEach(profile => {\n      providerIdList.push(profile.providerId);\n    });\n  }\n  /* reusable reauthentication function */\n\n\n  const reauthenticate = password => {\n    const credential = EmailAuthProvider.credential(email, password);\n    reauthenticateWithCredential(currentUser, credential);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-box\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"flex gap-1 blue-heading\",\n        children: [\"Loading\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"ri-loader-5-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  } else if (account) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main-box\",\n        children: [providerIdList.length < 2 && /*#__PURE__*/_jsxDEV(AddSignin, {\n          reauthenticate: reauthenticate,\n          providerIdList: providerIdList,\n          setKeyForRemount: setKeyForRemount\n        }, keyForRemount, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(UpdateProfileImage, {\n          account: account,\n          accountRef: accountRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UpdateUserName, {\n          account: account,\n          accountRef: accountRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UpdateName, {\n          account: account,\n          accountRef: accountRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UpdateEmail, {\n          accountRef: accountRef,\n          reauthenticate: reauthenticate,\n          providerIdList: providerIdList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(UpdatePassword, {\n          reauthenticate: reauthenticate,\n          providerIdList: providerIdList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DeleteAccount, {\n          account: account,\n          accountRef: accountRef,\n          reauthenticate: reauthenticate,\n          providerIdList: providerIdList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-box\",\n      children: `Error Loading Content :(`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this);\n  }\n}\n/*\r\ntodo:\r\n- password reset email link (ie. \"forgot password\")\r\n- confirmation email for making changes in settings / account deletion\r\n*/\n\n_s(UserSettings, \"ZrFV9v9MyJ1r++TE9hEbYq8OImc=\", false, function () {\n  return [useDocumentData];\n});\n\n_c = UserSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSettings\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/user-settings-page/UserSettings.js"],"names":["useState","reauthenticateWithCredential","EmailAuthProvider","doc","useDocumentData","auth","db","UpdateProfileImage","UpdateUserName","UpdateName","UpdateEmail","UpdatePassword","DeleteAccount","AddSignin","UserSettings","currentUser","uid","email","accountRef","account","loading","error","keyForRemount","setKeyForRemount","providerIdList","providerData","forEach","profile","push","providerId","reauthenticate","password","credential","length"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { reauthenticateWithCredential, EmailAuthProvider } from \"firebase/auth\";\r\nimport { doc } from \"firebase/firestore\";\r\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\r\nimport { auth, db } from \"../../backend/firebase-config\";\r\nimport UpdateProfileImage from \"./UpdateProfileImage\";\r\nimport UpdateUserName from \"./UpdateUserName\";\r\nimport UpdateName from \"./UpdateName\";\r\nimport UpdateEmail from \"./UpdateEmail\";\r\nimport UpdatePassword from \"./UpdatePassword\";\r\nimport DeleteAccount from \"./DeleteAccount\";\r\nimport AddSignin from \"./AddSignin\";\r\n\r\nexport default function UserSettings() {\r\n  const currentUser = auth.currentUser;\r\n  const { uid, email } = currentUser;\r\n  const accountRef = doc(db, \"accounts\", uid);\r\n  const [account, loading, error] = useDocumentData(accountRef);\r\n\r\n  const [keyForRemount, setKeyForRemount] = useState(1)\r\n\r\n  /* collect all sign-in poviders linked to user */\r\n  const providerIdList = [];\r\n\r\n  if (currentUser !== null) {\r\n    currentUser.providerData.forEach((profile) => {\r\n      providerIdList.push(profile.providerId);\r\n    });\r\n  }\r\n\r\n  /* reusable reauthentication function */\r\n  const reauthenticate = (password) => {\r\n    const credential = EmailAuthProvider.credential(email, password);\r\n    reauthenticateWithCredential(currentUser, credential);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <main className=\"main-box\">\r\n        <h2 className=\"flex gap-1 blue-heading\">\r\n          Loading\r\n          <div className=\"animate-spin\">\r\n            <i className=\"ri-loader-5-line\"></i>\r\n          </div>\r\n        </h2>\r\n      </main>\r\n    );\r\n  } else if (account) {\r\n    return (\r\n      <>\r\n        <main className=\"main-box\">\r\n          {providerIdList.length < 2 && (\r\n            <AddSignin\r\n              reauthenticate={reauthenticate}\r\n              providerIdList={providerIdList}\r\n              key={keyForRemount}\r\n              setKeyForRemount={setKeyForRemount}\r\n            />\r\n          )}\r\n\r\n          <UpdateProfileImage account={account} accountRef={accountRef} />\r\n\r\n          <UpdateUserName account={account} accountRef={accountRef} />\r\n\r\n          <UpdateName account={account} accountRef={accountRef} />\r\n\r\n          <UpdateEmail\r\n            accountRef={accountRef}\r\n            reauthenticate={reauthenticate}\r\n            providerIdList={providerIdList}\r\n          />\r\n\r\n          <UpdatePassword\r\n            reauthenticate={reauthenticate}\r\n            providerIdList={providerIdList}\r\n          />\r\n\r\n          <DeleteAccount\r\n            account={account}\r\n            accountRef={accountRef}\r\n            reauthenticate={reauthenticate}\r\n            providerIdList={providerIdList}\r\n          />\r\n        </main>\r\n      </>\r\n    );\r\n  } else if (error) {\r\n    return <main className=\"main-box\">{`Error Loading Content :(`}</main>;\r\n  }\r\n}\r\n\r\n/*\r\ntodo:\r\n- password reset email link (ie. \"forgot password\")\r\n- confirmation email for making changes in settings / account deletion\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}