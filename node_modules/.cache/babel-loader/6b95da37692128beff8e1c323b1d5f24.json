{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\PrivateChats.js\",\n    _s = $RefreshSig$();\n\nimport defaultPic from \"../images/cloud-fill.png\";\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, getDoc, serverTimestamp, addDoc, doc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport PrivateChatUser from \"./PrivateChatUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateChats(_ref) {\n  _s();\n\n  let {\n    user,\n    setChatSelection,\n    setOpenMenu\n  } = _ref;\n  const privateChatsRef = collection(db, \"accounts\", user.uid, \"privateChats\");\n  const privateChatsQ = query(privateChatsRef, orderBy(\"withUser\"), limitToLast(25));\n  const [privateChats, privateChatsLoading, privateChatsError] = useCollectionData(privateChatsQ);\n  const [userName, setUserName] = useState(\"\");\n  console.log(userName);\n\n  if (privateChatsLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  } else if (privateChatsError) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      error: privateChatsError,\n      content: \"private chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: privateChats.map((chat, index) => {\n        return /*#__PURE__*/_jsxDEV(PrivateChatUser, {\n          chat: chat,\n          setUserName: setUserName,\n          onClick: () => setChatSelection({\n            id: chat.chatID,\n            name: userName,\n            path: chat.ChatPath\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n}\n/*\r\ncreate a component like ChatMessage that takes props and grabs user data for each private chat\r\n*/\n\n_s(PrivateChats, \"6mEdDBN8vn342nwpowvecoLXzqk=\", false, function () {\n  return [useCollectionData];\n});\n\n_c = PrivateChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateChats\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/PrivateChats.js"],"names":["defaultPic","useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","getDoc","serverTimestamp","addDoc","doc","useState","useRef","useEffect","auth","db","PrivateChatUser","PrivateChats","user","setChatSelection","setOpenMenu","privateChatsRef","uid","privateChatsQ","privateChats","privateChatsLoading","privateChatsError","userName","setUserName","console","log","map","chat","index","id","chatID","name","path","ChatPath"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,SACEC,iBADF,EAEEC,eAFF,QAGO,gCAHP;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,eANF,EAOEC,MAPF,EAQEC,GARF,QASO,oBATP;AAUA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,4BAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,SAASC,YAAT,OAA+D;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,gBAAR;AAA0BC,IAAAA;AAA1B,GAAyC;AAC5E,QAAMC,eAAe,GAAGlB,UAAU,CAACY,EAAD,EAAK,UAAL,EAAiBG,IAAI,CAACI,GAAtB,EAA2B,cAA3B,CAAlC;AACA,QAAMC,aAAa,GAAGlB,KAAK,CACzBgB,eADyB,EAEzBjB,OAAO,CAAC,UAAD,CAFkB,EAGzBE,WAAW,CAAC,EAAD,CAHc,CAA3B;AAKA,QAAM,CAACkB,YAAD,EAAeC,mBAAf,EAAoCC,iBAApC,IACJ3B,iBAAiB,CAACwB,aAAD,CADnB;AAGA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACAkB,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAIF,mBAAJ,EAAyB;AACvB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIC,iBAAJ,EAAuB;AAC5B,wBAAO,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,iBAAd;AAAiC,MAAA,OAAO,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,gBACGF,YAAY,CAACO,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,4BACE,QAAC,eAAD;AAEE,UAAA,IAAI,EAAED,IAFR;AAGE,UAAA,WAAW,EAAEJ,WAHf;AAIE,UAAA,OAAO,EAAE,MAAMT,gBAAgB,CAAC;AAC9Be,YAAAA,EAAE,EAAEF,IAAI,CAACG,MADqB;AAE9BC,YAAAA,IAAI,EAAET,QAFwB;AAG9BU,YAAAA,IAAI,EAAEL,IAAI,CAACM;AAHmB,WAAD;AAJjC,WACOL,KADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAYD,OAbA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;AACF;AAED;AACA;AACA;;GAzCwBhB,Y;UAQpBlB,iB;;;KARoBkB,Y","sourcesContent":["import defaultPic from \"../images/cloud-fill.png\";\r\nimport {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  getDoc,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\nimport PrivateChatUser from \"./PrivateChatUser\";\r\n\r\nexport default function PrivateChats({ user, setChatSelection, setOpenMenu }) {\r\n  const privateChatsRef = collection(db, \"accounts\", user.uid, \"privateChats\");\r\n  const privateChatsQ = query(\r\n    privateChatsRef,\r\n    orderBy(\"withUser\"),\r\n    limitToLast(25)\r\n  );\r\n  const [privateChats, privateChatsLoading, privateChatsError] =\r\n    useCollectionData(privateChatsQ);\r\n\r\n  const [userName, setUserName] = useState(\"\");\r\n  console.log(userName);\r\n\r\n  if (privateChatsLoading) {\r\n    return <Loading />;\r\n  } else if (privateChatsError) {\r\n    return <Error error={privateChatsError} content={\"private chats\"} />;\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {privateChats.map((chat, index) => {\r\n          return (\r\n            <PrivateChatUser\r\n              key={index}\r\n              chat={chat}\r\n              setUserName={setUserName}\r\n              onClick={() => setChatSelection({\r\n                id: chat.chatID,\r\n                name: userName,\r\n                path: chat.ChatPath\r\n              })}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\ncreate a component like ChatMessage that takes props and grabs user data for each private chat\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}