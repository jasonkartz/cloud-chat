{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport { auth, db } from \"../backend/firebase-config\";\nimport { collection, setDoc, doc, query, orderBy, limitToLast, serverTimestamp, getDoc, updateDoc } from \"firebase/firestore\";\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport SignIn from \"./SignIn\";\nimport DropMenu from \"./DropMenu\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Header from \"./Header\";\nimport UserDisplay from \"./UserDisplay\";\nimport MessageForm from \"./MessageForm\";\nimport ChatMessage from \"./ChatMessage\";\nimport PublicChats from \"./PublicChats\";\nimport UserSettings from \"./user-settings-page/UserSettings\";\nimport CreateChat from \"./CreateChat\";\nimport UserProfile from \"./UserProfile\";\nimport UserList from \"./UserList\";\nimport PrivateChats from \"./PrivateChats\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nasync function Main(_ref) {\n  _s();\n\n  let {\n    user,\n    userLoading,\n    userError\n  } = _ref;\n  const accountRef = doc(db, \"accounts\", user.uid);\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\n  const docSnap = getDoc(accountRef);\n\n  if (docSnap.exists) {\n    updateDoc(accountRef, {\n      lastLogin: serverTimestamp()\n    });\n  } else {\n    await setDoc(accountRef, {\n      uid: user.uid,\n      name: user.displayName,\n      userName: \"\",\n      email: user.email,\n      photoURL: user.photoURL,\n      lastLogin: serverTimestamp(),\n      followers: [],\n      following: []\n    });\n  }\n  /* account ID selection from UserList */\n\n\n  const [accountSelection, setAccountSelection] = useState(null);\n  /* drop-down menu toggled from header */\n\n  const [openMenu, setOpenMenu] = useState(false);\n  /* room selected from chat room list */\n\n  const [chatSelection, setChatSelection] = useState({\n    id: \"96UnBx22d0OWd45HtlFt\",\n    name: \"Main\",\n    path: \"/publicChats/96UnBx22d0OWd45HtlFt/messages\"\n  });\n  /* for viewing older messages, sets limitToLast in messagesQ below*/\n\n  const [messagesLimit, setMessagesLimit] = useState(25);\n  /* resets message limit when changing chats */\n\n  useEffect(() => {\n    setMessagesLimit(25);\n  }, [chatSelection]);\n  const messagesRef = collection(db, chatSelection.path);\n  const messagesQ = query(messagesRef, orderBy(\"createdAt\"), limitToLast(messagesLimit));\n  const [messages, messagesLoading, messagesError] = useCollectionData(messagesQ, {\n    idField: \"id\"\n  });\n  /* message form */\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid\n    } = auth.currentUser;\n    const newMessageRef = doc(messagesRef);\n    await setDoc(newMessageRef, {\n      text: formValue,\n      createdAt: serverTimestamp(),\n      uid,\n      messageID: newMessageRef.id\n    });\n    setFormValue(\"\");\n  };\n  /* scrolling chatroom to bottom */\n\n\n  const dummy = useRef();\n  useEffect(() => {\n    if (user && messages) {\n      dummy.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [user, messages]);\n  /* screen display in drop-down menu */\n\n  const [screen, setScreen] = useState(\"chat\");\n  /* theme */\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  if (userLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  } else if (userError) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      error: userError,\n      content: \"user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${darkMode && \"dark\"}`,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `main-container`,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            user: user,\n            openMenu: openMenu,\n            setOpenMenu: setOpenMenu,\n            chatSelection: chatSelection,\n            darkMode: darkMode,\n            setDarkMode: setDarkMode,\n            children: user && /*#__PURE__*/_jsxDEV(UserDisplay, {\n              user: user,\n              setOpenMenu: setOpenMenu,\n              setScreen: setScreen,\n              setAccountSelection: setAccountSelection\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropMenu, {\n            user: user,\n            openMenu: openMenu,\n            setOpenMenu: setOpenMenu,\n            setChatSelection: setChatSelection,\n            screen: screen,\n            setScreen: setScreen,\n            setAccountSelection: setAccountSelection,\n            accountSelection: accountSelection,\n            children: [screen === \"chat\" && /*#__PURE__*/_jsxDEV(PublicChats, {\n              chatSelection: chatSelection,\n              setChatSelection: setChatSelection,\n              setOpenMenu: setOpenMenu,\n              children: /*#__PURE__*/_jsxDEV(CreateChat, {\n                user: user,\n                setChatSelection: setChatSelection,\n                setOpenMenu: setOpenMenu\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), screen === \"private-chats\" && /*#__PURE__*/_jsxDEV(PrivateChats, {\n              user: user,\n              setChatSelection: setChatSelection,\n              setOpenMenu: setOpenMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), screen === \"profile\" && /*#__PURE__*/_jsxDEV(UserProfile, {\n              user: user,\n              accountSelection: accountSelection,\n              setAccountSelection: setAccountSelection,\n              setScreen: setScreen,\n              setChatSelection: setChatSelection,\n              setOpenMenu: setOpenMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), screen === \"users\" && /*#__PURE__*/_jsxDEV(UserList, {\n              user: user,\n              setAccountSelection: setAccountSelection,\n              setScreen: setScreen\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), screen === \"settings\" && /*#__PURE__*/_jsxDEV(UserSettings, {\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n            className: \"main-box\",\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [messagesLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 37\n              }, this), messagesError && /*#__PURE__*/_jsxDEV(Error, {\n                error: messagesError,\n                content: \"messages. Try refreshing your browser.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), messages && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [messages.length === messagesLimit && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"load-more-btn\",\n                  onClick: () => setMessagesLimit(messagesLimit + 25),\n                  children: \"Load older messages\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 23\n                }, this), messages.map((message, index) => {\n                  return /*#__PURE__*/_jsxDEV(ChatMessage, {\n                    message: message,\n                    setOpenMenu: setOpenMenu,\n                    setAccountSelection: setAccountSelection,\n                    setScreen: setScreen\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-16\",\n                ref: dummy\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), user && /*#__PURE__*/_jsxDEV(MessageForm, {\n            sendMessage: sendMessage,\n            formValue: formValue,\n            setFormValue: setFormValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Main, \"WazsPTPGBdQbUn0LEHWvOvkO8zk=\", false, function () {\n  return [useDocumentData, useCollectionData];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/Main.js"],"names":["auth","db","collection","setDoc","doc","query","orderBy","limitToLast","serverTimestamp","getDoc","updateDoc","useCollectionData","useDocumentData","Error","Loading","SignIn","DropMenu","useState","useEffect","useRef","Header","UserDisplay","MessageForm","ChatMessage","PublicChats","UserSettings","CreateChat","UserProfile","UserList","PrivateChats","Main","user","userLoading","userError","accountRef","uid","account","accountLoading","accountError","docSnap","exists","lastLogin","name","displayName","userName","email","photoURL","followers","following","accountSelection","setAccountSelection","openMenu","setOpenMenu","chatSelection","setChatSelection","id","path","messagesLimit","setMessagesLimit","messagesRef","messagesQ","messages","messagesLoading","messagesError","idField","formValue","setFormValue","sendMessage","e","preventDefault","currentUser","newMessageRef","text","createdAt","messageID","dummy","current","scrollIntoView","behavior","screen","setScreen","darkMode","setDarkMode","length","map","message","index"],"mappings":"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","sourcesContent":["import { auth, db } from \"../backend/firebase-config\";\r\nimport {\r\n  collection,\r\n  setDoc,\r\n  doc,\r\n  query,\r\n  orderBy,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  getDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport SignIn from \"./SignIn\";\r\nimport DropMenu from \"./DropMenu\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport Header from \"./Header\";\r\nimport UserDisplay from \"./UserDisplay\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport ChatMessage from \"./ChatMessage\";\r\nimport PublicChats from \"./PublicChats\";\r\nimport UserSettings from \"./user-settings-page/UserSettings\";\r\nimport CreateChat from \"./CreateChat\";\r\nimport UserProfile from \"./UserProfile\";\r\nimport UserList from \"./UserList\";\r\nimport PrivateChats from \"./PrivateChats\";\r\n\r\nasync function Main({ user, userLoading, userError }) {\r\n  const accountRef = doc(db, \"accounts\", user.uid);\r\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\r\n\r\n  const docSnap = getDoc(accountRef);\r\n\r\n  if (docSnap.exists) {\r\n    updateDoc(accountRef, {\r\n      lastLogin: serverTimestamp(),\r\n    });\r\n  } else {\r\n    await setDoc(accountRef, {\r\n      uid: user.uid,\r\n      name: user.displayName,\r\n      userName: \"\",\r\n      email: user.email,\r\n      photoURL: user.photoURL,\r\n      lastLogin: serverTimestamp(),\r\n      followers: [],\r\n      following: [],\r\n    });\r\n  }\r\n\r\n  /* account ID selection from UserList */\r\n  const [accountSelection, setAccountSelection] = useState(null);\r\n\r\n  /* drop-down menu toggled from header */\r\n  const [openMenu, setOpenMenu] = useState(false);\r\n\r\n  /* room selected from chat room list */\r\n  const [chatSelection, setChatSelection] = useState({\r\n    id: \"96UnBx22d0OWd45HtlFt\",\r\n    name: \"Main\",\r\n    path: \"/publicChats/96UnBx22d0OWd45HtlFt/messages\",\r\n  });\r\n\r\n  /* for viewing older messages, sets limitToLast in messagesQ below*/\r\n\r\n  const [messagesLimit, setMessagesLimit] = useState(25);\r\n\r\n  /* resets message limit when changing chats */\r\n\r\n  useEffect(() => {\r\n    setMessagesLimit(25);\r\n  }, [chatSelection]);\r\n\r\n  const messagesRef = collection(db, chatSelection.path);\r\n  const messagesQ = query(\r\n    messagesRef,\r\n    orderBy(\"createdAt\"),\r\n    limitToLast(messagesLimit)\r\n  );\r\n  const [messages, messagesLoading, messagesError] = useCollectionData(\r\n    messagesQ,\r\n    {\r\n      idField: \"id\",\r\n    }\r\n  );\r\n\r\n  /* message form */\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid } = auth.currentUser;\r\n    const newMessageRef = doc(messagesRef);\r\n    await setDoc(newMessageRef, {\r\n      text: formValue,\r\n      createdAt: serverTimestamp(),\r\n      uid,\r\n      messageID: newMessageRef.id,\r\n    });\r\n\r\n    setFormValue(\"\");\r\n  };\r\n\r\n  /* scrolling chatroom to bottom */\r\n  const dummy = useRef();\r\n\r\n  useEffect(() => {\r\n    if (user && messages) {\r\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [user, messages]);\r\n\r\n  /* screen display in drop-down menu */\r\n\r\n  const [screen, setScreen] = useState(\"chat\");\r\n\r\n  /* theme */\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  if (userLoading) {\r\n    return <Loading />;\r\n  } else if (userError) {\r\n    return <Error error={userError} content={\"user\"} />;\r\n  } else {\r\n    return (\r\n      <div className={`${darkMode && \"dark\"}`}>\r\n        <div className=\"background\">\r\n          <div className={`main-container`}>\r\n            <Header\r\n              user={user}\r\n              openMenu={openMenu}\r\n              setOpenMenu={setOpenMenu}\r\n              chatSelection={chatSelection}\r\n              darkMode={darkMode}\r\n              setDarkMode={setDarkMode}\r\n            >\r\n              {user && (\r\n                <UserDisplay\r\n                  user={user}\r\n                  setOpenMenu={setOpenMenu}\r\n                  setScreen={setScreen}\r\n                  setAccountSelection={setAccountSelection}\r\n                />\r\n              )}\r\n            </Header>\r\n            <DropMenu\r\n              user={user}\r\n              openMenu={openMenu}\r\n              setOpenMenu={setOpenMenu}\r\n              setChatSelection={setChatSelection}\r\n              screen={screen}\r\n              setScreen={setScreen}\r\n              setAccountSelection={setAccountSelection}\r\n              accountSelection={accountSelection}\r\n            >\r\n              {screen === \"chat\" && (\r\n                <PublicChats\r\n                  chatSelection={chatSelection}\r\n                  setChatSelection={setChatSelection}\r\n                  setOpenMenu={setOpenMenu}\r\n                >\r\n                  <CreateChat\r\n                    user={user}\r\n                    setChatSelection={setChatSelection}\r\n                    setOpenMenu={setOpenMenu}\r\n                  />\r\n                </PublicChats>\r\n              )}\r\n              {screen === \"private-chats\" && (\r\n                <PrivateChats\r\n                  user={user}\r\n                  setChatSelection={setChatSelection}\r\n                  setOpenMenu={setOpenMenu}\r\n                />\r\n              )}\r\n              {screen === \"profile\" && (\r\n                <UserProfile\r\n                  user={user}\r\n                  accountSelection={accountSelection}\r\n                  setAccountSelection={setAccountSelection}\r\n                  setScreen={setScreen}\r\n                  setChatSelection={setChatSelection}\r\n                  setOpenMenu={setOpenMenu}\r\n                />\r\n              )}\r\n              {screen === \"users\" && (\r\n                <UserList\r\n                  user={user}\r\n                  setAccountSelection={setAccountSelection}\r\n                  setScreen={setScreen}\r\n                />\r\n              )}\r\n              {screen === \"settings\" && <UserSettings user={user} />}\r\n            </DropMenu>\r\n            <main className=\"main-box\">\r\n              <>\r\n                {messagesLoading && <Loading />}\r\n                {messagesError && (\r\n                  <Error\r\n                    error={messagesError}\r\n                    content={\"messages. Try refreshing your browser.\"}\r\n                  />\r\n                )}\r\n                {messages && (\r\n                  <>\r\n                    {messages.length === messagesLimit && (\r\n                      <button\r\n                        className=\"load-more-btn\"\r\n                        onClick={() => setMessagesLimit(messagesLimit + 25)}\r\n                      >\r\n                        Load older messages\r\n                      </button>\r\n                    )}\r\n                    {messages.map((message, index) => {\r\n                      return (\r\n                        <ChatMessage\r\n                          key={index}\r\n                          message={message}\r\n                          setOpenMenu={setOpenMenu}\r\n                          setAccountSelection={setAccountSelection}\r\n                          setScreen={setScreen}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </>\r\n                )}\r\n\r\n                <div className=\"mt-16\" ref={dummy}></div>\r\n              </>\r\n            </main>\r\n            {user && (\r\n              <MessageForm\r\n                sendMessage={sendMessage}\r\n                formValue={formValue}\r\n                setFormValue={setFormValue}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}