{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport { signInWithPopup, onAuthStateChanged, signOut, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth, googleAuth, db } from \"../backend/firebase-config\";\nimport { doc, setDoc, getDoc, serverTimestamp, updateDoc } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const [signUpView, setSignUpView] = useState(false);\n  const [registerData, setRegisterData] = useState({\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    passwordCheck: \"\"\n  });\n  const [registerMessage, setRegisterMessage] = useState(\"\");\n  const [signInData, setSignInData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [signinMessage, setSigninMessage] = useState(\"\");\n\n  const syncAccount = () => {\n    const {\n      uid,\n      displayName,\n      email,\n      photoURL\n    } = auth.currentUser;\n    const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\n    const docSnap = getDoc(accountRef);\n\n    if (docSnap.exists) {\n      updateDoc(accountRef, {\n        lastLogin: serverTimestamp()\n      });\n    } else {\n      setDoc(accountRef, {\n        uid: uid,\n        name: displayName,\n        userName: \"\",\n        email: email,\n        photoURL: photoURL,\n        lastLogin: serverTimestamp()\n      });\n    }\n  };\n\n  const register = async () => {\n    const {\n      name,\n      email,\n      username,\n      password,\n      passwordCheck\n    } = registerData;\n    setRegisterMessage(\"Signing up...\");\n\n    if (password === passwordCheck) {\n      await createUserWithEmailAndPassword(auth, email, password).then(async userCredential => {\n        if (userCredential.user) {\n          const {\n            uid\n          } = auth.currentUser;\n          const accountRef = doc(db, \"accounts\", uid);\n          await updateProfile(auth.currentUser, {\n            displayName: name\n          }).then(() => {\n            setDoc(accountRef, {\n              uid: uid,\n              name: name,\n              userName: username,\n              email: email,\n              photoURL: \"\",\n              lastLogin: serverTimestamp()\n            });\n          });\n        }\n      }).catch(error => {\n        setRegisterMessage(error.code + \" \" + error.message);\n        setTimeout(() => setRegisterMessage(\"\"), 5000);\n      });\n    } else {\n      setRegisterMessage(\"Passwords did not match! Try again.\");\n      setRegisterData({ ...registerData,\n        password: \"\",\n        passwordCheck: \"\"\n      });\n      setTimeout(() => setRegisterMessage(\"\"), 5000);\n    }\n  };\n\n  const signin = async () => {\n    const {\n      email,\n      password\n    } = signInData;\n    setSigninMessage(\"Signing in...\");\n    await signInWithEmailAndPassword(auth, \"totallynojason83@gmail.com\", password).then(userCredential => {\n      if (userCredential.user) {\n        const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\n        updateDoc(accountRef, {\n          lastLogin: serverTimestamp()\n        });\n      }\n    }).catch(error => {\n      setSigninMessage(error.code + \" \" + error.message);\n      setTimeout(() => setSigninMessage(\"\"), 5000);\n    });\n  };\n\n  const signInWithGoogle = async () => {\n    await signInWithPopup(auth, googleAuth).then(() => syncAccount());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-box-signin\",\n      children: [\n      /* Sign In */\n      !signUpView && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: `signin-section`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"blue-heading\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Enter Your Email\",\n            className: \"form-input\",\n            value: signInData.email,\n            onChange: e => setSignInData({ ...signInData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter Your Password\",\n            className: \"form-input\",\n            value: signInData.password,\n            onChange: e => setSignInData({ ...signInData,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: signin,\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => setSignUpView(true),\n              children: \"Create an account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: signinMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)\n      }, void 0, false),\n      /* Sign Up */\n      signUpView && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: `signin-section`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"blue-heading\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Your full name\",\n            className: \"form-input\",\n            value: registerData.name,\n            onChange: e => setRegisterData({ ...registerData,\n              name: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Your email\",\n            className: \"form-input\",\n            value: registerData.email,\n            onChange: e => setRegisterData({ ...registerData,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Create a username\",\n            className: \"form-input\",\n            value: registerData.username,\n            onChange: e => setRegisterData({ ...registerData,\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Create a password\",\n            className: \"form-input\",\n            value: registerData.password,\n            onChange: e => setRegisterData({ ...registerData,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Re-enter password\",\n            className: \"form-input\",\n            value: registerData.passwordCheck,\n            onChange: e => setRegisterData({ ...registerData,\n              passwordCheck: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: register,\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: registerMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: () => setSignUpView(false),\n              children: \"Have an account?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"self-center signin-btn\",\n        onClick: signInWithGoogle,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"p-1 text-blue-600 rounded ri-google-fill bg-slate-50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-top\",\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignIn, \"my1Rb8mmEr2uUmJZwfzwtAo6oW4=\");\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/SignIn.js"],"names":["signInWithPopup","onAuthStateChanged","signOut","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","auth","googleAuth","db","doc","setDoc","getDoc","serverTimestamp","updateDoc","useState","SignIn","signUpView","setSignUpView","registerData","setRegisterData","name","email","username","password","passwordCheck","registerMessage","setRegisterMessage","signInData","setSignInData","signinMessage","setSigninMessage","syncAccount","uid","displayName","photoURL","currentUser","accountRef","docSnap","exists","lastLogin","userName","register","then","userCredential","user","catch","error","code","message","setTimeout","signin","signInWithGoogle","e","target","value"],"mappings":"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","sourcesContent":["import {\r\n  signInWithPopup,\r\n  onAuthStateChanged,\r\n  signOut,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { auth, googleAuth, db } from \"../backend/firebase-config\";\r\nimport {\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  serverTimestamp,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function SignIn() {\r\n  const [signUpView, setSignUpView] = useState(false);\r\n\r\n  const [registerData, setRegisterData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n  });\r\n\r\n  const [registerMessage, setRegisterMessage] = useState(\"\");\r\n\r\n  const [signInData, setSignInData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [signinMessage, setSigninMessage] = useState(\"\");\r\n\r\n  const syncAccount = () => {\r\n    const { uid, displayName, email, photoURL } = auth.currentUser;\r\n    const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\r\n    const docSnap = getDoc(accountRef);\r\n\r\n    if (docSnap.exists) {\r\n      updateDoc(accountRef, {\r\n        lastLogin: serverTimestamp(),\r\n      });\r\n    } else {\r\n      setDoc(accountRef, {\r\n        uid: uid,\r\n        name: displayName,\r\n        userName: \"\",\r\n        email: email,\r\n        photoURL: photoURL,\r\n        lastLogin: serverTimestamp(),\r\n      });\r\n    }\r\n  };\r\n\r\n  const register = async () => {\r\n    const { name, email, username, password, passwordCheck } = registerData;\r\n    setRegisterMessage(\"Signing up...\");\r\n    if (password === passwordCheck) {\r\n      await createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async (userCredential) => {\r\n          if (userCredential.user) {\r\n            const { uid } = auth.currentUser;\r\n            const accountRef = doc(db, \"accounts\", uid);\r\n            await updateProfile(auth.currentUser, { displayName: name }).then(\r\n              () => {\r\n                setDoc(accountRef, {\r\n                  uid: uid,\r\n                  name: name,\r\n                  userName: username,\r\n                  email: email,\r\n                  photoURL: \"\",\r\n                  lastLogin: serverTimestamp(),\r\n                });\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setRegisterMessage(error.code + \" \" + error.message);\r\n          setTimeout(() => setRegisterMessage(\"\"), 5000);\r\n        });\r\n    } else {\r\n      setRegisterMessage(\"Passwords did not match! Try again.\");\r\n      setRegisterData({\r\n        ...registerData,\r\n        password: \"\",\r\n        passwordCheck: \"\",\r\n      });\r\n      setTimeout(() => setRegisterMessage(\"\"), 5000);\r\n    }\r\n  };\r\n\r\n  const signin = async () => {\r\n    const { email, password } = signInData;\r\n\r\n    setSigninMessage(\"Signing in...\");\r\n    await signInWithEmailAndPassword(auth, \"totallynojason83@gmail.com\", password)\r\n      .then((userCredential) => {\r\n        if (userCredential.user) {\r\n          const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\r\n          updateDoc(accountRef, {\r\n            lastLogin: serverTimestamp(),\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setSigninMessage(error.code + \" \" + error.message);\r\n        setTimeout(() => setSigninMessage(\"\"), 5000);\r\n      });\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    await signInWithPopup(auth, googleAuth).then(() => syncAccount());\r\n  };\r\n  return (\r\n    <>\r\n      <main className=\"main-box-signin\">\r\n        {\r\n          /* Sign In */\r\n          !signUpView && (\r\n            <>\r\n              <section className={`signin-section`}>\r\n                <h2 className=\"blue-heading\">Sign In</h2>\r\n\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Your Email\"\r\n                  className=\"form-input\"\r\n                  value={signInData.email}\r\n                  onChange={(e) =>\r\n                    setSignInData({ ...signInData, email: e.target.value })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Your Password\"\r\n                  className=\"form-input\"\r\n                  value={signInData.password}\r\n                  onChange={(e) =>\r\n                    setSignInData({ ...signInData, password: e.target.value })\r\n                  }\r\n                />\r\n                <div className=\"flex flex-col gap-2\">\r\n                  <button className=\"btn\" onClick={signin}>\r\n                    Sign in\r\n                  </button>\r\n                  <button className=\"btn\" onClick={() => setSignUpView(true)}>\r\n                    Create an account\r\n                  </button>\r\n                  <p>{signinMessage}</p>\r\n                </div>\r\n              </section>\r\n            </>\r\n          )\r\n        }\r\n\r\n        {\r\n          /* Sign Up */\r\n          signUpView && (\r\n            <>\r\n              <section className={`signin-section`}>\r\n                <h2 className=\"blue-heading\">Sign Up</h2>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your full name\"\r\n                  className=\"form-input\"\r\n                  value={registerData.name}\r\n                  onChange={(e) =>\r\n                    setRegisterData({ ...registerData, name: e.target.value })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Your email\"\r\n                  className=\"form-input\"\r\n                  value={registerData.email}\r\n                  onChange={(e) =>\r\n                    setRegisterData({ ...registerData, email: e.target.value })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Create a username\"\r\n                  className=\"form-input\"\r\n                  value={registerData.username}\r\n                  onChange={(e) =>\r\n                    setRegisterData({\r\n                      ...registerData,\r\n                      username: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Create a password\"\r\n                  className=\"form-input\"\r\n                  value={registerData.password}\r\n                  onChange={(e) =>\r\n                    setRegisterData({\r\n                      ...registerData,\r\n                      password: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Re-enter password\"\r\n                  className=\"form-input\"\r\n                  value={registerData.passwordCheck}\r\n                  onChange={(e) =>\r\n                    setRegisterData({\r\n                      ...registerData,\r\n                      passwordCheck: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <div className=\"flex flex-col gap-2\">\r\n                  <button className=\"btn\" onClick={register}>\r\n                    Sign Up\r\n                  </button>\r\n                  <p>{registerMessage}</p>\r\n                  <button className=\"btn\" onClick={() => setSignUpView(false)}>\r\n                    Have an account?\r\n                  </button>\r\n                </div>\r\n              </section>\r\n            </>\r\n          )\r\n        }\r\n\r\n        <button className=\"self-center signin-btn\" onClick={signInWithGoogle}>\r\n          <i className=\"p-1 text-blue-600 rounded ri-google-fill bg-slate-50\"></i>{\" \"}\r\n          <span className=\"align-top\">Sign in with Google</span>\r\n        </button>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}