{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport defaultPic from \"../images/cloud-fill.png\";\nimport { doc, orderBy, limitToLast, collection, setDoc, updateDoc, arrayRemove, arrayUnion, query, where } from \"firebase/firestore\";\nimport { useDocumentData, useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { useState } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport Loading from \"./Loading\";\nimport Error from \"./Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Profile(_ref) {\n  _s();\n\n  let {\n    user,\n    accountSelection,\n    setAccountSelection,\n    setScreen,\n    setChatSelection,\n    setOpenMenu\n  } = _ref;\n  const [openFollowList, setOpenFollowList] = useState(false);\n  const [selectFollowList, setSelectFollowList] = useState(\"following\");\n  const selectedAccountRef = doc(db, \"accounts\", accountSelection);\n  const [selectedAccount, selectedAccountLoading, selectedAccountError] = useDocumentData(selectedAccountRef);\n  const userAccountRef = doc(db, \"accounts\", user.uid);\n  const [userAccount, userLoading, userError] = useDocumentData(userAccountRef);\n  const privateChatRef = doc(db, \"accounts\", user.uid, \"privateChats\", accountSelection);\n  const [privateChat, privateChatLoading, privateChatError] = useDocumentData(privateChatRef);\n\n  const sendMessage = async () => {\n    const userChatRef = doc(db, \"accounts\", user.uid, \"privateChats\", selectedAccount.uid);\n    const selectedAccountChatRef = doc(db, \"accounts\", selectedAccount.uid, \"privateChats\", user.uid);\n\n    if (userChatRef || selectedAccountChatRef) {\n      setChatSelection({\n        id: privateChat.chatID,\n        name: `You and ${selectedAccount.userName || selectedAccount.name}`,\n        path: privateChat.chatPath + \"/messages\"\n      });\n      setOpenMenu(false);\n    } else {\n      const newChatRef = doc(collection(db, \"privateChats\"));\n      await setDoc(newChatRef, {\n        id: newChatRef.id,\n        users: [user.uid, selectedAccount.uid]\n      }).then(() => {\n        setDoc(userChatRef, {\n          chatID: newChatRef.id,\n          withUser: selectedAccount.uid,\n          chatPath: newChatRef.path\n        });\n        setDoc(selectedAccountChatRef, {\n          chatID: newChatRef.id,\n          withUser: user.uid,\n          chatPath: newChatRef.path\n        });\n        setChatSelection({\n          id: newChatRef.id,\n          name: `You and ${selectedAccount.userName || selectedAccount.name}`,\n          path: \"/privateChats/\" + newChatRef.id + \"/messages\"\n        });\n        setOpenMenu(false);\n      });\n    }\n  };\n\n  const followUser = async () => {\n    updateDoc(userAccountRef, {\n      following: arrayUnion(selectedAccount.uid)\n    });\n    updateDoc(selectedAccountRef, {\n      followers: arrayUnion(user.uid)\n    });\n  };\n\n  const unFollowUser = () => {\n    updateDoc(userAccountRef, {\n      following: arrayRemove(selectedAccount.uid)\n    });\n    updateDoc(selectedAccountRef, {\n      followers: arrayRemove(user.uid)\n    });\n  };\n\n  const accountsRef = collection(db, \"accounts\");\n  const accountsQ = query(accountsRef, orderBy(\"name\"), limitToLast(25));\n  const [accounts, accountsLoading, accountsError, snapshot] = useCollectionData(accountsQ);\n\n  if (selectedAccountLoading || userLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 12\n    }, this);\n  } else if (selectedAccountError || userError) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }, this);\n  } else {\n    const followCheck = userAccount.following.includes(selectedAccount.uid);\n    const followBackCheck = selectedAccount.following.includes(userAccount.uid);\n    const followDisplay = followCheck && followBackCheck ? \"Following eachother\" : followCheck ? \"Following\" : followBackCheck ? \"Follows you\" : \"\";\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"settings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"blue-heading\",\n            children: selectedAccount.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm italic\",\n            children: followDisplay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), !openFollowList && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hover:cursor-pointer\",\n              onClick: () => {\n                setOpenFollowList(true);\n                setSelectFollowList(\"following\");\n              },\n              children: [\"Followers\", \" \", selectedAccount.followers ? selectedAccount.followers.length : \"0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this), \" \", \"|\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"hover:cursor-pointer\",\n              onClick: () => {\n                setOpenFollowList(true);\n                setSelectFollowList(\"followers\");\n              },\n              children: [\"Following\", \" \", selectedAccount.following ? selectedAccount.following.length : \"0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedAccount.photoURL || defaultPic,\n            alt: \"user\",\n            width: \"100\",\n            className: \"rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), selectedAccount.uid !== user.uid && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"flex items-center gap-1 btn\",\n              onClick: followCheck ? unFollowUser : followUser,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: `ri-user-${followCheck ? \"unfollow\" : \"follow\"}-line`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: followCheck ? \"Unfollow\" : \"Follow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"flex items-center gap-1 btn\",\n              onClick: () => sendMessage(),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: `ri-chat-2-line`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Message\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Login:\", \" \", selectedAccount.lastLogin && selectedAccount.lastLogin.toDate().toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), selectedAccount.uid !== user.uid && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"flex items-center gap-1 hover:cursor-pointer hover:text-blue-500\",\n            onClick: () => setScreen(\"users\"),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"text-lg font-bold ri-arrow-go-back-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" Go Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), openFollowList && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"flex items-center gap-1 text-sm font-bold text-blue-600 hover:cursor-pointer hover:text-blue-500\",\n            onClick: () => setOpenFollowList(false),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"ri-arrow-go-back-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" Back to profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"blue-heading\",\n            children: selectFollowList === \"followers\" ? \"Following\" : \"Followers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: accounts.map((account, index) => {\n            return account[selectFollowList].includes(selectedAccount.uid) && /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex gap-2 p-1 border-b border-blue-200 hover:rounded hover:cursor-pointer hover:bg-blue-50/50 hover:text-blue-600\",\n              onClick: () => {\n                setAccountSelection(account.uid);\n                setOpenFollowList(false);\n                setScreen(\"profile\");\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: account.photoURL || defaultPic,\n                alt: \"user\",\n                width: \"25\",\n                className: \"self-center rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"flex flex-col\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [account.userName || account.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm\",\n                  children: account.userName && account.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true);\n  }\n}\n\n_s(Profile, \"jarhhiL2eIPBpUbCwYPlNuprGuI=\", false, function () {\n  return [useDocumentData, useDocumentData, useDocumentData, useCollectionData];\n});\n\n_c = Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/UserProfile.js"],"names":["defaultPic","doc","orderBy","limitToLast","collection","setDoc","updateDoc","arrayRemove","arrayUnion","query","where","useDocumentData","useCollectionData","useState","auth","db","Loading","Error","Profile","user","accountSelection","setAccountSelection","setScreen","setChatSelection","setOpenMenu","openFollowList","setOpenFollowList","selectFollowList","setSelectFollowList","selectedAccountRef","selectedAccount","selectedAccountLoading","selectedAccountError","userAccountRef","uid","userAccount","userLoading","userError","privateChatRef","privateChat","privateChatLoading","privateChatError","sendMessage","userChatRef","selectedAccountChatRef","id","chatID","name","userName","path","chatPath","newChatRef","users","then","withUser","followUser","following","followers","unFollowUser","accountsRef","accountsQ","accounts","accountsLoading","accountsError","snapshot","followCheck","includes","followBackCheck","followDisplay","length","photoURL","lastLogin","toDate","toDateString","map","account","index"],"mappings":"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","sourcesContent":["import defaultPic from \"../images/cloud-fill.png\";\r\nimport {\r\n  doc,\r\n  orderBy,\r\n  limitToLast,\r\n  collection,\r\n  setDoc,\r\n  updateDoc,\r\n  arrayRemove,\r\n  arrayUnion,\r\n  query,\r\n  where,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  useDocumentData,\r\n  useCollectionData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport { useState } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\nimport Loading from \"./Loading\";\r\nimport Error from \"./Error\";\r\n\r\nexport default function Profile({\r\n  user,\r\n  accountSelection,\r\n  setAccountSelection,\r\n  setScreen,\r\n  setChatSelection,\r\n  setOpenMenu,\r\n}) {\r\n  const [openFollowList, setOpenFollowList] = useState(false);\r\n  const [selectFollowList, setSelectFollowList] = useState(\"following\");\r\n\r\n  const selectedAccountRef = doc(db, \"accounts\", accountSelection);\r\n  const [selectedAccount, selectedAccountLoading, selectedAccountError] =\r\n    useDocumentData(selectedAccountRef);\r\n\r\n  const userAccountRef = doc(db, \"accounts\", user.uid);\r\n  const [userAccount, userLoading, userError] = useDocumentData(userAccountRef);\r\n\r\n  const privateChatRef = doc(\r\n    db,\r\n    \"accounts\",\r\n    user.uid,\r\n    \"privateChats\",\r\n    accountSelection\r\n  );\r\n  const [privateChat, privateChatLoading, privateChatError] =\r\n    useDocumentData(privateChatRef);\r\n\r\n  const sendMessage = async () => {\r\n    const userChatRef = doc(\r\n      db,\r\n      \"accounts\",\r\n      user.uid,\r\n      \"privateChats\",\r\n      selectedAccount.uid\r\n    );\r\n    const selectedAccountChatRef = doc(\r\n      db,\r\n      \"accounts\",\r\n      selectedAccount.uid,\r\n      \"privateChats\",\r\n      user.uid\r\n    );\r\n\r\n    if (userChatRef || selectedAccountChatRef) {\r\n      setChatSelection({\r\n        id: privateChat.chatID,\r\n        name: `You and ${selectedAccount.userName || selectedAccount.name}`,\r\n        path: privateChat.chatPath + \"/messages\",\r\n      });\r\n      setOpenMenu(false);\r\n    } else {\r\n      const newChatRef = doc(collection(db, \"privateChats\"));\r\n      await setDoc(newChatRef, {\r\n        id: newChatRef.id,\r\n        users: [user.uid, selectedAccount.uid],\r\n      }).then(() => {\r\n        setDoc(userChatRef, {\r\n          chatID: newChatRef.id,\r\n          withUser: selectedAccount.uid,\r\n          chatPath: newChatRef.path,\r\n        });\r\n        setDoc(selectedAccountChatRef, {\r\n          chatID: newChatRef.id,\r\n          withUser: user.uid,\r\n          chatPath: newChatRef.path,\r\n        });\r\n        setChatSelection({\r\n          id: newChatRef.id,\r\n          name: `You and ${selectedAccount.userName || selectedAccount.name}`,\r\n          path: \"/privateChats/\" + newChatRef.id + \"/messages\",\r\n        });\r\n        setOpenMenu(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const followUser = async () => {\r\n    updateDoc(userAccountRef, {\r\n      following: arrayUnion(selectedAccount.uid),\r\n    });\r\n\r\n    updateDoc(selectedAccountRef, {\r\n      followers: arrayUnion(user.uid),\r\n    });\r\n  };\r\n\r\n  const unFollowUser = () => {\r\n    updateDoc(userAccountRef, {\r\n      following: arrayRemove(selectedAccount.uid),\r\n    });\r\n\r\n    updateDoc(selectedAccountRef, {\r\n      followers: arrayRemove(user.uid),\r\n    });\r\n  };\r\n\r\n  const accountsRef = collection(db, \"accounts\");\r\n  const accountsQ = query(accountsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [accounts, accountsLoading, accountsError, snapshot] =\r\n    useCollectionData(accountsQ);\r\n\r\n  if (selectedAccountLoading || userLoading) {\r\n    return <Loading />;\r\n  } else if (selectedAccountError || userError) {\r\n    return <Error />;\r\n  } else {\r\n    const followCheck = userAccount.following.includes(selectedAccount.uid);\r\n    const followBackCheck = selectedAccount.following.includes(userAccount.uid);\r\n\r\n    const followDisplay =\r\n      followCheck && followBackCheck\r\n        ? \"Following eachother\"\r\n        : followCheck\r\n        ? \"Following\"\r\n        : followBackCheck\r\n        ? \"Follows you\"\r\n        : \"\";\r\n\r\n    return (\r\n      <>\r\n        <section className=\"settings-section\">\r\n          <div className=\"\">\r\n            <h1 className=\"blue-heading\">{selectedAccount.name}</h1>\r\n            <p className=\"text-sm italic\">{followDisplay}</p>\r\n          </div>\r\n\r\n          {/* Default screen */}\r\n\r\n          {!openFollowList && (\r\n            <>\r\n              <p className=\"font-bold\">\r\n                <span\r\n                  className=\"hover:cursor-pointer\"\r\n                  onClick={() => {\r\n                    setOpenFollowList(true);\r\n                    setSelectFollowList(\"following\");\r\n                  }}\r\n                >\r\n                  Followers{\" \"}\r\n                  {selectedAccount.followers\r\n                    ? selectedAccount.followers.length\r\n                    : \"0\"}\r\n                </span>{\" \"}\r\n                |{\" \"}\r\n                <span\r\n                  className=\"hover:cursor-pointer\"\r\n                  onClick={() => {\r\n                    setOpenFollowList(true);\r\n                    setSelectFollowList(\"followers\");\r\n                  }}\r\n                >\r\n                  Following{\" \"}\r\n                  {selectedAccount.following\r\n                    ? selectedAccount.following.length\r\n                    : \"0\"}\r\n                </span>\r\n              </p>\r\n\r\n              <img\r\n                src={selectedAccount.photoURL || defaultPic}\r\n                alt=\"user\"\r\n                width=\"100\"\r\n                className=\"rounded\"\r\n              />\r\n\r\n              {selectedAccount.uid !== user.uid && (\r\n                <div className=\"flex gap-2\">\r\n                  <button\r\n                    className=\"flex items-center gap-1 btn\"\r\n                    onClick={followCheck ? unFollowUser : followUser}\r\n                  >\r\n                    <i\r\n                      className={`ri-user-${\r\n                        followCheck ? \"unfollow\" : \"follow\"\r\n                      }-line`}\r\n                    ></i>\r\n                    <span>{followCheck ? \"Unfollow\" : \"Follow\"}</span>\r\n                  </button>\r\n                  <button\r\n                    className=\"flex items-center gap-1 btn\"\r\n                    onClick={() => sendMessage()}\r\n                  >\r\n                    <i className={`ri-chat-2-line`}></i>\r\n                    <span>Message</span>\r\n                  </button>\r\n                </div>\r\n              )}\r\n              <p>\r\n                Last Login:{\" \"}\r\n                {selectedAccount.lastLogin &&\r\n                  selectedAccount.lastLogin.toDate().toDateString()}\r\n              </p>\r\n\r\n              {selectedAccount.uid !== user.uid && (\r\n                <p\r\n                  className=\"flex items-center gap-1 hover:cursor-pointer hover:text-blue-500\"\r\n                  onClick={() => setScreen(\"users\")}\r\n                >\r\n                  <i className=\"text-lg font-bold ri-arrow-go-back-line\"></i>\r\n                  <span> Go Back</span>\r\n                </p>\r\n              )}\r\n            </>\r\n          )}\r\n        </section>\r\n\r\n        {/* Follower/Following Screen */}\r\n\r\n        {openFollowList && (\r\n          <>\r\n            <div className=\"flex flex-col\">\r\n              <button\r\n                className=\"flex items-center gap-1 text-sm font-bold text-blue-600 hover:cursor-pointer hover:text-blue-500\"\r\n                onClick={() => setOpenFollowList(false)}\r\n              >\r\n                <i className=\"ri-arrow-go-back-line\"></i>\r\n                <span> Back to profile</span>\r\n              </button>\r\n              <h1 className=\"blue-heading\">\r\n                {selectFollowList === \"followers\" ? \"Following\" : \"Followers\"}\r\n              </h1>\r\n            </div>\r\n            <ul>\r\n              {accounts.map((account, index) => {\r\n                return (\r\n                  account[selectFollowList].includes(selectedAccount.uid) && (\r\n                    <li\r\n                      className=\"flex gap-2 p-1 border-b border-blue-200 hover:rounded hover:cursor-pointer hover:bg-blue-50/50 hover:text-blue-600\"\r\n                      key={index}\r\n                      onClick={() => {\r\n                        setAccountSelection(account.uid);\r\n                        setOpenFollowList(false);\r\n                        setScreen(\"profile\");\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={account.photoURL || defaultPic}\r\n                        alt=\"user\"\r\n                        width=\"25\"\r\n                        className=\"self-center rounded\"\r\n                      />\r\n                      <span className=\"flex flex-col\">\r\n                        <p>{account.userName || account.name} </p>\r\n                        <p className=\"text-sm\">\r\n                          {account.userName && account.name}\r\n                        </p>\r\n                      </span>\r\n                    </li>\r\n                  )\r\n                );\r\n              })}\r\n            </ul>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}