{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport { signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { auth, googleAuth, db } from \"../backend/firebase-config\";\nimport { doc, setDoc, getDoc, serverTimestamp, updateDoc } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const [signUpView, setSignUpView] = useState(false);\n  const [registerData, setRegisterData] = useState({\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    passwordCheck: \"\"\n  });\n  const [registerMessage, setRegisterMessage] = useState(\"\");\n  const [signInData, setSignInData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [signinMessage, setSigninMessage] = useState(\"\");\n\n  const register = async () => {\n    const {\n      name,\n      email,\n      username,\n      password,\n      passwordCheck\n    } = registerData;\n    setRegisterMessage(\"Signing up...\");\n\n    if (password === passwordCheck) {\n      await createUserWithEmailAndPassword(auth, email, password).then(async userCredential => {\n        if (userCredential.user) {\n          const {\n            uid\n          } = auth.currentUser;\n          const accountRef = doc(db, \"accounts\", uid);\n          await updateProfile(auth.currentUser, {\n            displayName: name\n          }).then(() => {\n            setDoc(accountRef, {\n              uid: uid,\n              name: name,\n              userName: username,\n              email: email,\n              photoURL: \"\",\n              lastLogin: serverTimestamp(),\n              following: [],\n              followers: []\n            });\n          });\n        }\n      }).catch(error => {\n        setRegisterMessage(error.code + \" \" + error.message);\n        setTimeout(() => setRegisterMessage(\"\"), 5000);\n      });\n    } else {\n      setRegisterMessage(\"Passwords did not match! Try again.\");\n      setRegisterData({ ...registerData,\n        password: \"\",\n        passwordCheck: \"\"\n      });\n      setTimeout(() => setRegisterMessage(\"\"), 5000);\n    }\n  };\n\n  const signin = async () => {\n    const {\n      email,\n      password\n    } = signInData;\n    setSigninMessage(\"Signing in...\");\n    await signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      if (userCredential.user) {\n        const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\n        updateDoc(accountRef, {\n          lastLogin: serverTimestamp()\n        });\n      }\n    }).catch(error => {\n      setSigninMessage(error.code + \" \" + error.message);\n      setTimeout(() => setSigninMessage(\"\"), 5000);\n    });\n  };\n\n  const syncAccount = () => {\n    const {\n      uid,\n      displayName,\n      email,\n      photoURL\n    } = auth.currentUser;\n    const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\n    const docSnap = getDoc(accountRef);\n\n    if (docSnap) {\n      updateDoc(accountRef, {\n        lastLogin: serverTimestamp()\n      });\n    } else {\n      setDoc(accountRef, {\n        uid: uid,\n        name: displayName,\n        userName: \"\",\n        email: email,\n        photoURL: photoURL,\n        lastLogin: serverTimestamp(),\n        followers: [],\n        following: []\n      });\n    }\n  };\n\n  const signInWithGoogle = async () => {\n    await signInWithPopup(auth, googleAuth).then(async () => await syncAccount());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\n    /* Sign In */\n    !signUpView && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: `signin-section`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"heading\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter Your Email\",\n          className: \"text-input text-input-signin-width\",\n          value: signInData.email,\n          onChange: e => setSignInData({ ...signInData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter Your Password\",\n          className: \"text-input text-input-signin-width\",\n          value: signInData.password,\n          onChange: e => setSignInData({ ...signInData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: signin,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setSignUpView(true),\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: signinMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }, this)\n    }, void 0, false),\n    /* Sign Up */\n    signUpView && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: `signin-section`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"heading\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your full name\",\n          className: \"text-input text-input-signin-width\",\n          value: registerData.name,\n          onChange: e => setRegisterData({ ...registerData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Your email\",\n          className: \"text-input text-input-signin-width\",\n          value: registerData.email,\n          onChange: e => setRegisterData({ ...registerData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Create a username\",\n          className: \"text-input text-input-signin-width\",\n          value: registerData.username,\n          onChange: e => setRegisterData({ ...registerData,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Create a password\",\n          className: \"text-input text-input-signin-width\",\n          value: registerData.password,\n          onChange: e => setRegisterData({ ...registerData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Re-enter password\",\n          className: \"text-input text-input-signin-width\",\n          value: registerData.passwordCheck,\n          onChange: e => setRegisterData({ ...registerData,\n            passwordCheck: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: register,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: registerMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setSignUpView(false),\n            children: \"Have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"self-center btn\",\n      onClick: signInWithGoogle,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"sign-in-btn-google-icon ri-google-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"align-top\",\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SignIn, \"my1Rb8mmEr2uUmJZwfzwtAo6oW4=\");\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/SignIn.js"],"names":["signInWithPopup","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","auth","googleAuth","db","doc","setDoc","getDoc","serverTimestamp","updateDoc","useState","SignIn","signUpView","setSignUpView","registerData","setRegisterData","name","email","username","password","passwordCheck","registerMessage","setRegisterMessage","signInData","setSignInData","signinMessage","setSigninMessage","register","then","userCredential","user","uid","currentUser","accountRef","displayName","userName","photoURL","lastLogin","following","followers","catch","error","code","message","setTimeout","signin","syncAccount","docSnap","signInWithGoogle","e","target","value"],"mappings":"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","sourcesContent":["import {\r\n  signInWithPopup,\r\n  signInWithEmailAndPassword,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { auth, googleAuth, db } from \"../backend/firebase-config\";\r\nimport {\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  serverTimestamp,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function SignIn() {\r\n  const [signUpView, setSignUpView] = useState(false);\r\n\r\n  const [registerData, setRegisterData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n  });\r\n\r\n  const [registerMessage, setRegisterMessage] = useState(\"\");\r\n\r\n  const [signInData, setSignInData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [signinMessage, setSigninMessage] = useState(\"\");\r\n\r\n  const register = async () => {\r\n    const { name, email, username, password, passwordCheck } = registerData;\r\n    setRegisterMessage(\"Signing up...\");\r\n    if (password === passwordCheck) {\r\n      await createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async (userCredential) => {\r\n          if (userCredential.user) {\r\n            const { uid } = auth.currentUser;\r\n            const accountRef = doc(db, \"accounts\", uid);\r\n            await updateProfile(auth.currentUser, { displayName: name }).then(\r\n              () => {\r\n                setDoc(accountRef, {\r\n                  uid: uid,\r\n                  name: name,\r\n                  userName: username,\r\n                  email: email,\r\n                  photoURL: \"\",\r\n                  lastLogin: serverTimestamp(),\r\n                  following: [],\r\n                  followers: [],\r\n                });\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setRegisterMessage(error.code + \" \" + error.message);\r\n          setTimeout(() => setRegisterMessage(\"\"), 5000);\r\n        });\r\n    } else {\r\n      setRegisterMessage(\"Passwords did not match! Try again.\");\r\n      setRegisterData({\r\n        ...registerData,\r\n        password: \"\",\r\n        passwordCheck: \"\",\r\n      });\r\n      setTimeout(() => setRegisterMessage(\"\"), 5000);\r\n    }\r\n  };\r\n\r\n  const signin = async () => {\r\n    const { email, password } = signInData;\r\n\r\n    setSigninMessage(\"Signing in...\");\r\n    await signInWithEmailAndPassword(auth, email, password)\r\n      .then((userCredential) => {\r\n        if (userCredential.user) {\r\n          const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\r\n          updateDoc(accountRef, {\r\n            lastLogin: serverTimestamp(),\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setSigninMessage(error.code + \" \" + error.message);\r\n        setTimeout(() => setSigninMessage(\"\"), 5000);\r\n      });\r\n  };\r\n\r\n  const syncAccount = () => {\r\n    const { uid, displayName, email, photoURL } = auth.currentUser;\r\n    const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\r\n    const docSnap = getDoc(accountRef);\r\n\r\n    if (docSnap) {\r\n      updateDoc(accountRef, {\r\n        lastLogin: serverTimestamp(),\r\n      });\r\n    } else {\r\n      setDoc(accountRef, {\r\n        uid: uid,\r\n        name: displayName,\r\n        userName: \"\",\r\n        email: email,\r\n        photoURL: photoURL,\r\n        lastLogin: serverTimestamp(),\r\n        followers: [],\r\n        following: [],\r\n      });\r\n    }\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    await signInWithPopup(auth, googleAuth).then(async () => await syncAccount());\r\n  };\r\n  return (\r\n    <>\r\n        {\r\n          /* Sign In */\r\n          !signUpView && (\r\n            <>\r\n              <section className={`signin-section`}>\r\n                <h2 className=\"heading\">Sign In</h2>\r\n\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Your Email\"\r\n                  className=\"text-input text-input-signin-width\"\r\n                  value={signInData.email}\r\n                  onChange={(e) =>\r\n                    setSignInData({ ...signInData, email: e.target.value })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Your Password\"\r\n                  className=\"text-input text-input-signin-width\"\r\n                  value={signInData.password}\r\n                  onChange={(e) =>\r\n                    setSignInData({ ...signInData, password: e.target.value })\r\n                  }\r\n                />\r\n                <div className=\"flex flex-col gap-2\">\r\n                  <button className=\"btn\" onClick={signin}>\r\n                    Sign in\r\n                  </button>\r\n                  <button className=\"btn\" onClick={() => setSignUpView(true)}>\r\n                    Create an account\r\n                  </button>\r\n                  <p>{signinMessage}</p>\r\n                </div>\r\n              </section>\r\n            </>\r\n          )\r\n        }\r\n\r\n        {\r\n          /* Sign Up */\r\n          signUpView && (\r\n            <>\r\n              <section className={`signin-section`}>\r\n                <h2 className=\"heading\">Sign Up</h2>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Your full name\"\r\n                  className=\"text-input text-input-signin-width\"\r\n                  value={registerData.name}\r\n                  onChange={(e) =>\r\n                    setRegisterData({ ...registerData, name: e.target.value })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"email\"\r\n                  placeholder=\"Your email\"\r\n                  className=\"text-input text-input-signin-width\"\r\n                  value={registerData.email}\r\n                  onChange={(e) =>\r\n                    setRegisterData({ ...registerData, email: e.target.value })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Create a username\"\r\n                  className=\"text-input text-input-signin-width\"\r\n                  value={registerData.username}\r\n                  onChange={(e) =>\r\n                    setRegisterData({\r\n                      ...registerData,\r\n                      username: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Create a password\"\r\n                  className=\"text-input text-input-signin-width\"\r\n                  value={registerData.password}\r\n                  onChange={(e) =>\r\n                    setRegisterData({\r\n                      ...registerData,\r\n                      password: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Re-enter password\"\r\n                  className=\"text-input text-input-signin-width\"\r\n                  value={registerData.passwordCheck}\r\n                  onChange={(e) =>\r\n                    setRegisterData({\r\n                      ...registerData,\r\n                      passwordCheck: e.target.value,\r\n                    })\r\n                  }\r\n                />\r\n                <div className=\"flex flex-col gap-1\">\r\n                  <button className=\"btn\" onClick={register}>\r\n                    Sign Up\r\n                  </button>\r\n                  <p>{registerMessage}</p>\r\n                  <button className=\"btn\" onClick={() => setSignUpView(false)}>\r\n                    Have an account?\r\n                  </button>\r\n                </div>\r\n              </section>\r\n            </>\r\n          )\r\n        }\r\n\r\n        <button className=\"self-center btn\" onClick={signInWithGoogle}>\r\n          <i className=\"sign-in-btn-google-icon ri-google-fill\"></i>{\" \"}\r\n          <span className=\"align-top\">Sign in with Google</span>\r\n        </button>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}