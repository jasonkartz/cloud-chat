{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\ChatList.js\",\n    _s = $RefreshSig$();\n\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, serverTimestamp, addDoc, doc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatList(_ref) {\n  _s();\n\n  let {\n    roomSelection,\n    setRoomSelection,\n    setOpenMenu,\n    setRoomName\n  } = _ref;\n  const publicChatsRef = collection(db, \"publicChats\");\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\n  const [publicChats, loading, error, snapshot] = useCollectionData(publicChatsQ);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else if (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: publicChats.map((chatroom, index) => {\n          const roomID = snapshot._snapshot.docChanges[index].doc.key.path.segments[6];\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `px-1 pb-1 rounded ${roomID !== roomSelection && \"hover:cursor-pointer hover:bg-blue-50/50\"} ${roomID === roomSelection && \"bg-blue-50/50 underline\"}`,\n            onClick: () => {\n              setRoomSelection(roomID);\n              setRoomName(chatroom.name);\n              setOpenMenu(false);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: chatroom.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n}\n\n_s(ChatList, \"uBh7ZmTlCUqupVAu5VqGt0Z9HyE=\", false, function () {\n  return [useCollectionData];\n});\n\n_c = ChatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/ChatList.js"],"names":["useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","serverTimestamp","addDoc","doc","useState","useRef","useEffect","auth","db","ChatList","roomSelection","setRoomSelection","setOpenMenu","setRoomName","publicChatsRef","publicChatsQ","publicChats","loading","error","snapshot","map","chatroom","index","roomID","_snapshot","docChanges","key","path","segments","name"],"mappings":";;;AAAA,SACEA,iBADF,EAEEC,eAFF,QAGO,gCAHP;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,eALF,EAMEC,MANF,EAOEC,GAPF,QAQO,oBARP;AASA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,4BAAzB;;;AAEA,eAAe,SAASC,QAAT,OAKZ;AAAA;;AAAA,MAL8B;AAC/BC,IAAAA,aAD+B;AAE/BC,IAAAA,gBAF+B;AAG/BC,IAAAA,WAH+B;AAI/BC,IAAAA;AAJ+B,GAK9B;AACD,QAAMC,cAAc,GAAGjB,UAAU,CAACW,EAAD,EAAK,aAAL,CAAjC;AACA,QAAMO,YAAY,GAAGhB,KAAK,CAACe,cAAD,EAAiBhB,OAAO,CAAC,MAAD,CAAxB,EAAkCE,WAAW,CAAC,EAAD,CAA7C,CAA1B;AACA,QAAM,CAACgB,WAAD,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,QAA9B,IACJ1B,iBAAiB,CAACsB,YAAD,CADnB;;AAGA,MAAIE,OAAJ,EAAa;AACX,wBACE;AAAA,6BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD,GAND,MAMO,IAAIC,KAAJ,EAAW;AAChB,wBACE;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAKD,GANM,MAMA;AACL,wBACE;AAAA,6BACE;AAAA,kBACGF,WAAW,CAACI,GAAZ,CAAgB,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACpC,gBAAMC,MAAM,GACVJ,QAAQ,CAACK,SAAT,CAAmBC,UAAnB,CAA8BH,KAA9B,EAAqCnB,GAArC,CAAyCuB,GAAzC,CAA6CC,IAA7C,CAAkDC,QAAlD,CAA2D,CAA3D,CADF;AAEA,8BACE;AACE,YAAA,SAAS,EAAG,qBACVL,MAAM,KAAKb,aAAX,IACA,0CACD,IAAGa,MAAM,KAAKb,aAAX,IAA4B,yBAA0B,EAJ5D;AAME,YAAA,OAAO,EAAE,MAAM;AACbC,cAAAA,gBAAgB,CAACY,MAAD,CAAhB;AACAV,cAAAA,WAAW,CAACQ,QAAQ,CAACQ,IAAV,CAAX;AACAjB,cAAAA,WAAW,CAAC,KAAD,CAAX;AACD,aAVH;AAAA,mCAYE;AAAA,wBAAOS,QAAQ,CAACQ;AAAhB;AAAA;AAAA;AAAA;AAAA;AAZF,aAKOP,KALP;AAAA;AAAA;AAAA;AAAA,kBADF;AAgBD,SAnBA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AA0BD;AACF;;GAnDuBb,Q;UASpBhB,iB;;;KAToBgB,Q","sourcesContent":["import {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\n\r\nexport default function ChatList({\r\n  roomSelection,\r\n  setRoomSelection,\r\n  setOpenMenu,\r\n  setRoomName\r\n}) {\r\n  const publicChatsRef = collection(db, \"publicChats\");\r\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [publicChats, loading, error, snapshot] =\r\n    useCollectionData(publicChatsQ);\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Loading />\r\n      </>\r\n    );\r\n  } else if (error) {\r\n    return (\r\n      <>\r\n        <Error />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <ul>\r\n          {publicChats.map((chatroom, index) => {\r\n            const roomID =\r\n              snapshot._snapshot.docChanges[index].doc.key.path.segments[6];\r\n            return (\r\n              <li\r\n                className={`px-1 pb-1 rounded ${\r\n                  roomID !== roomSelection &&\r\n                  \"hover:cursor-pointer hover:bg-blue-50/50\"\r\n                } ${roomID === roomSelection && \"bg-blue-50/50 underline\"}`}\r\n                key={index}\r\n                onClick={() => {\r\n                  setRoomSelection(roomID);\r\n                  setRoomName(chatroom.name)\r\n                  setOpenMenu(false);\r\n                }}\r\n              >\r\n                <span>{chatroom.name}</span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}