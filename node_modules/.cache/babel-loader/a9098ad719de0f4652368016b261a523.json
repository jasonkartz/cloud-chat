{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport ChatMessage from \"./ChatMessage\";\nimport { collection, orderBy, query, limitToLast, serverTimestamp, addDoc, doc, getDoc, getDocs, where } from \"firebase/firestore\";\nimport { db, auth } from \"../backend/firebase-config\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatRoom() {\n  _s();\n\n  const messagesRef = collection(db, \"messages\");\n  const messagesQ = query(messagesRef, orderBy(\"createdAt\"), limitToLast(25));\n  const [messages] = useCollectionData(messagesQ, {\n    idField: \"id\"\n  });\n  const [formValue, setFormValue] = useState(\"\");\n  const dummy = useRef();\n  /* accounts data */\n\n  const accountsRef = collection(db, \"accounts\");\n  /*\r\n  const accountsQ = query(accountsRef)\r\n            const [accounts] = useCollectionData(accountsQ)\r\n            */\n\n  useEffect(() => dummy.current.scrollIntoView({\n    behavior: \"smooth\"\n  }), [messages]);\n\n  const sendMessage = async e => {\n    e.preventDefault();\n    const {\n      uid\n    } = auth.currentUser;\n    await addDoc(messagesRef, {\n      text: formValue,\n      createdAt: serverTimestamp(),\n      uid\n    });\n    setFormValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-box\",\n      children: [messages && messages.map((message, index) => {\n        let photoURL;\n        let name;\n        const accountRef = doc(db, \"accounts\", message.uid);\n        const accountSnap = getDoc(accountRef);\n        return /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message,\n          accountSnap: accountSnap\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      className: \"message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"message-input\",\n        placeholder: \"Say something nice\",\n        value: formValue,\n        onChange: e => setFormValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"message-btn\",\n        disabled: !formValue,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"ri-send-plane-fill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ChatRoom, \"Zm+Cvz7oKHK+L12mbfXPdLcsSgs=\", false, function () {\n  return [useCollectionData];\n});\n\n_c = ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/ChatRoom.js"],"names":["ChatMessage","collection","orderBy","query","limitToLast","serverTimestamp","addDoc","doc","getDoc","getDocs","where","db","auth","useCollectionData","useState","useRef","useEffect","ChatRoom","messagesRef","messagesQ","messages","idField","formValue","setFormValue","dummy","accountsRef","current","scrollIntoView","behavior","sendMessage","e","preventDefault","uid","currentUser","text","createdAt","map","message","index","photoURL","name","accountRef","accountSnap","target","value"],"mappings":"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","sourcesContent":["import ChatMessage from \"./ChatMessage\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  where\r\n} from \"firebase/firestore\";\r\nimport { db, auth } from \"../backend/firebase-config\";\r\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\n\r\nexport default function ChatRoom() {\r\n  const messagesRef = collection(db, \"messages\");\r\n  const messagesQ = query(messagesRef, orderBy(\"createdAt\"), limitToLast(25));\r\n  const [messages] = useCollectionData(messagesQ, { idField: \"id\" });\r\n\r\n  const [formValue, setFormValue] = useState(\"\");\r\n\r\n  const dummy = useRef();\r\n\r\n  /* accounts data */\r\n  const accountsRef = collection(db, \"accounts\");\r\n  \r\n  /*\r\n  const accountsQ = query(accountsRef)\r\n            const [accounts] = useCollectionData(accountsQ)\r\n            */\r\n  \r\n\r\n  useEffect(\r\n    () => dummy.current.scrollIntoView({ behavior: \"smooth\" }),\r\n    [messages]\r\n  );\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid } = auth.currentUser;\r\n\r\n    await addDoc(messagesRef, {\r\n      text: formValue,\r\n      createdAt: serverTimestamp(),\r\n      uid,\r\n    });\r\n\r\n    setFormValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main className=\"main-box\">\r\n        {messages &&\r\n          messages.map((message, index) => {\r\n            let photoURL;\r\n            let name;\r\n            const accountRef = doc(db, \"accounts\", message.uid)\r\n            const accountSnap = getDoc(accountRef)\r\n            return <ChatMessage key={index} message={message} accountSnap={accountSnap} />\r\n          }\r\n            \r\n          )}\r\n        <div ref={dummy}></div>\r\n      </main>\r\n      <form onSubmit={sendMessage} className=\"message-form\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"message-input\"\r\n          placeholder=\"Say something nice\"\r\n          value={formValue}\r\n          onChange={(e) => setFormValue(e.target.value)}\r\n        ></input>\r\n        <button type=\"submit\" className=\"message-btn\" disabled={!formValue}>\r\n          <i className=\"ri-send-plane-fill\"></i>\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}