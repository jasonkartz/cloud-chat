{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\CreateChat.js\",\n    _s = $RefreshSig$();\n\nimport { useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, serverTimestamp, setDoc, doc } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { db } from \"../backend/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateChat(_ref) {\n  _s();\n\n  let {\n    user,\n    setChatSelection\n  } = _ref;\n  const [createChatName, setCreateChatName] = useState(\"\");\n  const [createChatStatus, setCreateChatStatus] = useState(\"\");\n  const accountRef = doc(db, \"accounts\", user.uid);\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\n\n  const createRoom = async () => {\n    setCreateChatStatus(\"Creating room...\");\n    const newRoomRef = doc(collection(db, `publicChats`));\n    await setDoc(newRoomRef, {\n      createdAt: serverTimestamp(),\n      creator: account.name,\n      moderatorUID: user.uid,\n      name: createChatName,\n      id: newRoomRef.id\n    }).then(() => {\n      setCreateChatStatus(\"Opening room: \" + createChatName);\n      setChatSelection({\n        id: newRoomRef.id,\n        name: createChatName,\n        path: \"/publicChats/\" + newRoomRef.id + \"/messages\"\n      });\n      setCreateChatStatus(createChatName + \" is now live!\");\n      setCreateChatName(\"\");\n      setTimeout(() => setCreateChatStatus(\"\"), 5000);\n    });\n  };\n\n  if (accountLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  } else if (accountError) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      error: accountError,\n      content: \"user data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading\",\n        children: \"Create a chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter room name / topic\",\n        className: \"form-input\",\n        value: createChatName,\n        onChange: e => setCreateChatName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: createRoom,\n        disabled: !createChatName,\n        children: \"Create Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: createChatStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(CreateChat, \"uSB7ohgqACOfHXjb5an7fmbWZiM=\", false, function () {\n  return [useDocumentData];\n});\n\n_c = CreateChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChat\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/CreateChat.js"],"names":["useDocumentData","Error","Loading","collection","serverTimestamp","setDoc","doc","useState","db","CreateChat","user","setChatSelection","createChatName","setCreateChatName","createChatStatus","setCreateChatStatus","accountRef","uid","account","accountLoading","accountError","createRoom","newRoomRef","createdAt","creator","name","moderatorUID","id","then","path","setTimeout","e","target","value"],"mappings":"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","sourcesContent":["import {\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  serverTimestamp,\r\n  setDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\nimport { db } from \"../backend/firebase-config\";\r\n\r\nexport default function CreateChat({ user, setChatSelection }) {\r\n  const [createChatName, setCreateChatName] = useState(\"\");\r\n  const [createChatStatus, setCreateChatStatus] = useState(\"\");\r\n\r\n  const accountRef = doc(db, \"accounts\", user.uid);\r\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\r\n\r\n  const createRoom = async () => {\r\n    setCreateChatStatus(\"Creating room...\");\r\n    const newRoomRef = doc(collection(db, `publicChats`));\r\n    await setDoc(newRoomRef, {\r\n      createdAt: serverTimestamp(),\r\n      creator: account.name,\r\n      moderatorUID: user.uid,\r\n      name: createChatName,\r\n      id: newRoomRef.id,\r\n    }).then(() => {\r\n      setCreateChatStatus(\"Opening room: \" + createChatName);\r\n      setChatSelection({\r\n        id: newRoomRef.id,\r\n        name: createChatName,\r\n        path: \"/publicChats/\" + newRoomRef.id + \"/messages\",\r\n      });\r\n      setCreateChatStatus(createChatName + \" is now live!\");\r\n      setCreateChatName(\"\");\r\n      setTimeout(() => setCreateChatStatus(\"\"), 5000);\r\n    });\r\n  };\r\n\r\n  if (accountLoading) {\r\n    return <Loading />;\r\n  } else if (accountError) {\r\n    return <Error error={accountError} content={\"user data\"} />;\r\n  } else {\r\n    return (\r\n      <>\r\n        <h2 className=\"blue-heading\">Create a chat</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter room name / topic\"\r\n          className=\"form-input\"\r\n          value={createChatName}\r\n          onChange={(e) => setCreateChatName(e.target.value)}\r\n        />\r\n        <button className=\"btn\" onClick={createRoom} disabled={!createChatName}>\r\n          Create Chat\r\n        </button>\r\n        <p>{createChatStatus}</p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}