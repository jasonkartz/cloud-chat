{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\CreateChat.js\",\n    _s = $RefreshSig$();\n\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, serverTimestamp, addDoc, doc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport { async } from \"@firebase/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateChat(_ref) {\n  _s();\n\n  let {\n    user,\n    roomSelection,\n    setRoomSelection,\n    setRoomName\n  } = _ref;\n  const [createRoomName, setCreateRoomName] = useState(\"\");\n  const [createRoomStatus, setCreateRoomStatus] = useState(\"\");\n  const accountRef = doc(db, \"accounts\", user.uid);\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\n  const publicChatsRef = collection(db, \"publicChats\");\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\n  const [publicChats, loading, error, snapshot] = useCollectionData(publicChatsQ);\n\n  const createRoom = async () => {\n    setCreateRoomStatus(\"Creating room...\");\n    await addDoc(collection(db, `publicChats`), {\n      createdAt: serverTimestamp(),\n      creator: account.name,\n      moderatorUID: user.uid,\n      name: createRoomName\n    }).then(() => {\n      setCreateRoomStatus(\"Opening room: \" + createRoomName);\n      setRoomSelection(createRoomName);\n      setRoomName(createRoomName);\n      setCreateRoomStatus(createRoomName + \" is now live!\");\n      setCreateRoomName(\"\");\n      setTimeout(() => setCreateRoomStatus(\"\"), 5000);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"border-b-2 border-blue-200 settings-section \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading\",\n        children: \"Create Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter room name / topic\",\n        className: \"form-input\",\n        value: createRoomName,\n        onChange: e => setCreateRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: createRoom,\n        disabled: !createRoomName,\n        children: \"Create Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: createRoomStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: publicChats.map((chatroom, index) => {\n        const roomID = snapshot._snapshot.docChanges[index].doc.key.path.segments[6];\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `rounded px-1 hover:cursor-pointer hover:bg-blue-50/50 hover:text-blue-600`,\n          onClick: () => {},\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [chatroom.name, roomID === roomSelection && \" (Current room)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateChat, \"XHACJ5ZSqjltoW7Br7wS/0EXBok=\", false, function () {\n  return [useDocumentData, useCollectionData];\n});\n\n_c = CreateChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChat\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/CreateChat.js"],"names":["useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","serverTimestamp","addDoc","doc","useState","useRef","useEffect","auth","db","async","CreateChat","user","roomSelection","setRoomSelection","setRoomName","createRoomName","setCreateRoomName","createRoomStatus","setCreateRoomStatus","accountRef","uid","account","accountLoading","accountError","publicChatsRef","publicChatsQ","publicChats","loading","error","snapshot","createRoom","createdAt","creator","name","moderatorUID","then","setTimeout","e","target","value","map","chatroom","index","roomID","_snapshot","docChanges","key","path","segments"],"mappings":"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","sourcesContent":["import {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\nimport { async } from \"@firebase/util\";\r\n\r\nexport default function CreateChat({ user,roomSelection, setRoomSelection, setRoomName }) {\r\n  const [createRoomName, setCreateRoomName] = useState(\"\");\r\n  const [createRoomStatus, setCreateRoomStatus] = useState(\"\");\r\n\r\n  const accountRef = doc(db, \"accounts\", user.uid);\r\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\r\n\r\n  const publicChatsRef = collection(db, \"publicChats\");\r\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [publicChats, loading, error, snapshot] =\r\n    useCollectionData(publicChatsQ);\r\n\r\n  const createRoom = async () => {\r\n    setCreateRoomStatus(\"Creating room...\");\r\n    await addDoc(collection(db, `publicChats`), {\r\n      createdAt: serverTimestamp(),\r\n      creator: account.name,\r\n      moderatorUID: user.uid,\r\n      name: createRoomName,\r\n    }).then(() => {\r\n      setCreateRoomStatus(\"Opening room: \" + createRoomName);\r\n      setRoomSelection(createRoomName);\r\n      setRoomName(createRoomName);\r\n      setCreateRoomStatus(createRoomName + \" is now live!\");\r\n      setCreateRoomName(\"\");\r\n      setTimeout(() => setCreateRoomStatus(\"\"), 5000);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"border-b-2 border-blue-200 settings-section \">\r\n        <h2 className=\"blue-heading\">Create Chat</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter room name / topic\"\r\n          className=\"form-input\"\r\n          value={createRoomName}\r\n          onChange={(e) => setCreateRoomName(e.target.value)}\r\n        />\r\n        <button className=\"btn\" onClick={createRoom} disabled={!createRoomName}>\r\n          Create Chat\r\n        </button>\r\n        <p>{createRoomStatus}</p>\r\n      </section>\r\n      <ul>\r\n          {publicChats.map((chatroom, index) => {\r\n            const roomID =\r\n              snapshot._snapshot.docChanges[index].doc.key.path.segments[6];\r\n            return (\r\n              <li\r\n                className={`rounded px-1 hover:cursor-pointer hover:bg-blue-50/50 hover:text-blue-600`}\r\n                key={index}\r\n                onClick={() => {\r\n                 \r\n                }}\r\n              >\r\n                <span>{chatroom.name}{roomID === roomSelection && \" (Current room)\"}</span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}