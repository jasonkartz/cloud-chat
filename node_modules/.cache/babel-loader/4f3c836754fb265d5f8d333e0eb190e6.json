{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\PrivateChats.js\",\n    _s = $RefreshSig$();\n\nimport defaultPic from \"../images/cloud-fill.png\";\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, serverTimestamp, addDoc, doc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateChats(_ref) {\n  _s();\n\n  let {\n    user,\n    accountSelection,\n    setAccountSelection,\n    setScreen\n  } = _ref;\n  const privateChatsRef = collection(db, \"accounts\", user.uid, \"privateChats\");\n  const privateChatsQ = query(privateChatsRef, orderBy(\"withUser\"), limitToLast(25));\n  const [privateChats, privateChatsLoading, privateChatsError] = useCollectionData(privateChatsQ);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n/*\r\n<ul>\r\n      {privateChats.map((chat, index) => {\r\n        return <li key={index}>{chat.chatID}</li>;\r\n      })}\r\n    </ul>\r\n\r\n*/\n\n_s(PrivateChats, \"YeWOk/Um4V2rREO1+oeuUNBXdhE=\", false, function () {\n  return [useCollectionData];\n});\n\n_c = PrivateChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateChats\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/PrivateChats.js"],"names":["defaultPic","useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","serverTimestamp","addDoc","doc","useState","useRef","useEffect","auth","db","PrivateChats","user","accountSelection","setAccountSelection","setScreen","privateChatsRef","uid","privateChatsQ","privateChats","privateChatsLoading","privateChatsError"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,SACEC,iBADF,EAEEC,eAFF,QAGO,gCAHP;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,eALF,EAMEC,MANF,EAOEC,GAPF,QAQO,oBARP;AASA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,4BAAzB;;AAEA,eAAe,SAASC,YAAT,OAKZ;AAAA;;AAAA,MALkC;AACnCC,IAAAA,IADmC;AAEnCC,IAAAA,gBAFmC;AAGnCC,IAAAA,mBAHmC;AAInCC,IAAAA;AAJmC,GAKlC;AACD,QAAMC,eAAe,GAAGjB,UAAU,CAACW,EAAD,EAAK,UAAL,EAAiBE,IAAI,CAACK,GAAtB,EAA2B,cAA3B,CAAlC;AACA,QAAMC,aAAa,GAAGjB,KAAK,CAACe,eAAD,EAAkBhB,OAAO,CAAC,UAAD,CAAzB,EAAuCE,WAAW,CAAC,EAAD,CAAlD,CAA3B;AACA,QAAM,CAACiB,YAAD,EAAeC,mBAAf,EAAoCC,iBAApC,IACJ1B,iBAAiB,CAACuB,aAAD,CADnB;AAGA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GAvBwBP,Y;UASpBhB,iB;;;KAToBgB,Y","sourcesContent":["import defaultPic from \"../images/cloud-fill.png\";\r\nimport {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\n\r\nexport default function PrivateChats({\r\n  user,\r\n  accountSelection,\r\n  setAccountSelection,\r\n  setScreen,\r\n}) {\r\n  const privateChatsRef = collection(db, \"accounts\", user.uid, \"privateChats\");\r\n  const privateChatsQ = query(privateChatsRef, orderBy(\"withUser\"), limitToLast(25));\r\n  const [privateChats, privateChatsLoading, privateChatsError] =\r\n    useCollectionData(privateChatsQ);\r\n\r\n  return (\r\n    <p>test</p>\r\n  );\r\n}\r\n\r\n/*\r\n<ul>\r\n      {privateChats.map((chat, index) => {\r\n        return <li key={index}>{chat.chatID}</li>;\r\n      })}\r\n    </ul>\r\n\r\n*/"]},"metadata":{},"sourceType":"module"}