{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport { signInWithPopup, onAuthStateChanged, signOut, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { useCreateUserWithEmailAndPassword, useSignInWithEmailAndPassword } from \"react-firebase-hooks/auth\";\nimport { auth, googleAuth, db } from \"../backend/firebase-config\";\nimport { doc, setDoc, getDoc, serverTimestamp, updateDoc } from \"firebase/firestore\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SignIn() {\n  _s();\n\n  const [signUpView, setSignUpView] = useState(false);\n  const [registerData, setRegisterData] = useState({\n    name: \"\",\n    email: \"\",\n    username: \"\",\n    password: \"\",\n    passwordCheck: \"\"\n  });\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  console.log(registerData);\n  const [registerMessage, setRegisterMessage] = useState(\"\");\n  const [SignInData, setSignInData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [createUserWithEmailAndPassword, userRegistered, RegisterLoading, RegisterError] = useCreateUserWithEmailAndPassword(auth);\n  const [signInWithEmailAndPassword, user, loading, error] = useSignInWithEmailAndPassword(auth);\n\n  const syncAccount = () => {\n    const {\n      uid,\n      displayName,\n      email,\n      photoURL\n    } = auth.currentUser;\n    const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\n    const docSnap = getDoc(accountRef);\n\n    if (docSnap.exists) {\n      updateDoc(accountRef, {\n        lastLogin: serverTimestamp()\n      });\n    } else {\n      setDoc(accountRef, {\n        uid: uid,\n        name: displayName,\n        userName: \"\",\n        email: email,\n        photoURL: photoURL,\n        lastLogin: serverTimestamp()\n      });\n    }\n  };\n\n  const register = async () => {\n    if (registerData.password === registerData.passwordCheck) {\n      await createUserWithEmailAndPassword(auth, registerEmail, registerPassword).then(() => {\n        const {\n          uid\n        } = auth.currentUser;\n        const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\n        setDoc(accountRef, {\n          uid: uid,\n          name: registerData.name,\n          userName: registerData.username,\n          email: registerEmail,\n          photoURL: \"\",\n          lastLogin: serverTimestamp()\n        });\n      });\n    } else {\n      setRegisterMessage(\"Passwords did not match! Try again.\");\n      setRegisterData({ ...registerData,\n        password: \"\",\n        passwordCheck: \"\"\n      });\n      setTimeout(() => setRegisterMessage(\"\"), 5000);\n    }\n  };\n\n  const signInWithGoogle = async () => {\n    await signInWithPopup(auth, googleAuth).then(() => syncAccount());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-box-signin\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: `signin-section ${signUpView && \"hidden\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"blue-heading\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Your Username\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Your Password\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setSignUpView(true),\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: `signin-section ${!signUpView && \"hidden\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"blue-heading\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Your full name\",\n          className: \"form-input\",\n          value: registerData.name,\n          onChange: e => setRegisterData({ ...registerData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Your email\",\n          className: \"form-input\",\n          value: registerEmail,\n          onChange: e => setRegisterEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Create a username\",\n          className: \"form-input\",\n          value: registerData.username,\n          onChange: e => setRegisterData({ ...registerData,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Create a password\",\n          className: \"form-input\",\n          value: registerPassword,\n          onChange: e => setRegisterPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Re-enter password\",\n          className: \"form-input\",\n          value: registerData.passwordCheck,\n          onChange: e => setRegisterData({ ...registerData,\n            passwordCheck: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: register,\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [RegisterLoading && \"Signing up...\", RegisterError && \"Error signing up \" + RegisterError.message, registerMessage]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: () => setSignUpView(false),\n            children: \"Have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"self-center signin-btn\",\n        onClick: signInWithGoogle,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"p-1 text-blue-600 rounded ri-google-fill bg-slate-50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"align-top\",\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(SignIn, \"WBQA3fShUNRAitYcoDRGTOIi6xI=\", false, function () {\n  return [useCreateUserWithEmailAndPassword, useSignInWithEmailAndPassword];\n});\n\n_c = SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/SignIn.js"],"names":["signInWithPopup","onAuthStateChanged","signOut","signInWithEmailAndPassword","useCreateUserWithEmailAndPassword","useSignInWithEmailAndPassword","auth","googleAuth","db","doc","setDoc","getDoc","serverTimestamp","updateDoc","useState","SignIn","signUpView","setSignUpView","registerData","setRegisterData","name","email","username","password","passwordCheck","registerEmail","setRegisterEmail","registerPassword","setRegisterPassword","console","log","registerMessage","setRegisterMessage","SignInData","setSignInData","createUserWithEmailAndPassword","userRegistered","RegisterLoading","RegisterError","user","loading","error","syncAccount","uid","displayName","photoURL","currentUser","accountRef","docSnap","exists","lastLogin","userName","register","then","setTimeout","signInWithGoogle","e","target","value","message"],"mappings":"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","sourcesContent":["import {\r\n  signInWithPopup,\r\n  onAuthStateChanged,\r\n  signOut,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\nimport {\r\n  useCreateUserWithEmailAndPassword,\r\n  useSignInWithEmailAndPassword,\r\n} from \"react-firebase-hooks/auth\";\r\nimport { auth, googleAuth, db } from \"../backend/firebase-config\";\r\nimport {\r\n  doc,\r\n  setDoc,\r\n  getDoc,\r\n  serverTimestamp,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function SignIn() {\r\n  const [signUpView, setSignUpView] = useState(false);\r\n\r\n  const [registerData, setRegisterData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n  });\r\n\r\n  const [registerEmail, setRegisterEmail] = useState(\"\")\r\n  const [registerPassword, setRegisterPassword] = useState(\"\")\r\n\r\n  console.log(registerData)\r\n\r\n  const [registerMessage, setRegisterMessage] = useState(\"\");\r\n\r\n  const [SignInData, setSignInData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [\r\n    createUserWithEmailAndPassword,\r\n    userRegistered,\r\n    RegisterLoading,\r\n    RegisterError,\r\n  ] = useCreateUserWithEmailAndPassword(auth);\r\n\r\n  const [signInWithEmailAndPassword, user, loading, error] =\r\n    useSignInWithEmailAndPassword(auth);\r\n\r\n  const syncAccount = () => {\r\n    const { uid, displayName, email, photoURL } = auth.currentUser;\r\n    const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\r\n    const docSnap = getDoc(accountRef);\r\n\r\n    if (docSnap.exists) {\r\n      updateDoc(accountRef, {\r\n        lastLogin: serverTimestamp(),\r\n      });\r\n    } else {\r\n      setDoc(accountRef, {\r\n        uid: uid,\r\n        name: displayName,\r\n        userName: \"\",\r\n        email: email,\r\n        photoURL: photoURL,\r\n        lastLogin: serverTimestamp(),\r\n      });\r\n    }\r\n  };\r\n\r\n  const register = async () => {\r\n    if (registerData.password === registerData.passwordCheck) {\r\n      await createUserWithEmailAndPassword(\r\n        auth,\r\n        registerEmail,\r\n        registerPassword\r\n      ).then(() => {\r\n        const { uid } = auth.currentUser;\r\n        const accountRef = doc(db, \"accounts\", auth.currentUser.uid);\r\n\r\n        setDoc(accountRef, {\r\n          uid: uid,\r\n          name: registerData.name,\r\n          userName: registerData.username,\r\n          email: registerEmail,\r\n          photoURL: \"\",\r\n          lastLogin: serverTimestamp(),\r\n        });\r\n      });\r\n    } else {\r\n      setRegisterMessage(\"Passwords did not match! Try again.\");\r\n      setRegisterData({\r\n        ...registerData,\r\n        password: \"\",\r\n        passwordCheck: \"\",\r\n      });\r\n      setTimeout(() => setRegisterMessage(\"\"), 5000);\r\n    }\r\n  };\r\n\r\n  const signInWithGoogle = async () => {\r\n    await signInWithPopup(auth, googleAuth).then(() => syncAccount());\r\n  };\r\n  return (\r\n    <>\r\n      <main className=\"main-box-signin\">\r\n        {/* Sign In */}\r\n        <section className={`signin-section ${signUpView && \"hidden\"}`}>\r\n          <h2 className=\"blue-heading\">Sign In</h2>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Username\"\r\n            className=\"form-input\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter Your Password\"\r\n            className=\"form-input\"\r\n          />\r\n          <div className=\"flex flex-col gap-2\">\r\n            <button className=\"btn\">Sign in</button>\r\n            <button className=\"btn\" onClick={() => setSignUpView(true)}>\r\n              Create an account\r\n            </button>\r\n          </div>\r\n        </section>\r\n\r\n        {/* Sign Up */}\r\n\r\n        <section className={`signin-section ${!signUpView && \"hidden\"}`}>\r\n          <h2 className=\"blue-heading\">Sign Up</h2>\r\n\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Your full name\"\r\n            className=\"form-input\"\r\n            value={registerData.name}\r\n            onChange={(e) =>\r\n              setRegisterData({ ...registerData, name: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Your email\"\r\n            className=\"form-input\"\r\n            value={registerEmail}\r\n            onChange={(e) =>\r\n              setRegisterEmail(e.target.value)\r\n            }\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Create a username\"\r\n            className=\"form-input\"\r\n            value={registerData.username}\r\n            onChange={(e) =>\r\n              setRegisterData({ ...registerData, username: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Create a password\"\r\n            className=\"form-input\"\r\n            value={registerPassword}\r\n            onChange={(e) =>\r\n              setRegisterPassword(e.target.value)\r\n            }\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Re-enter password\"\r\n            className=\"form-input\"\r\n            value={registerData.passwordCheck}\r\n            onChange={(e) =>\r\n              setRegisterData({\r\n                ...registerData,\r\n                passwordCheck: e.target.value,\r\n              })\r\n            }\r\n          />\r\n          <div className=\"flex flex-col gap-2\">\r\n            <button className=\"btn\" onClick={register}>\r\n              Sign Up\r\n            </button>\r\n            <p>\r\n              {RegisterLoading && \"Signing up...\"}\r\n              {RegisterError &&\r\n                \"Error signing up \" + RegisterError.message}\r\n              {registerMessage}\r\n            </p>\r\n            <button className=\"btn\" onClick={() => setSignUpView(false)}>\r\n              Have an account?\r\n            </button>\r\n          </div>\r\n        </section>\r\n\r\n        <button className=\"self-center signin-btn\" onClick={signInWithGoogle}>\r\n          <i className=\"p-1 text-blue-600 rounded ri-google-fill bg-slate-50\"></i>{\" \"}\r\n          <span className=\"align-top\">Sign in with Google</span>\r\n        </button>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}