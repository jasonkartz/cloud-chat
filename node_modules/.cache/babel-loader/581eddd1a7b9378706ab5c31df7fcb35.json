{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\user-settings-page\\\\AddSignin.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { auth, googleAuth } from \"../../backend/firebase-config\";\nimport { EmailAuthProvider, linkWithCredential, linkWithPopup, reauthenticateWithPopup } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddSignin(props) {\n  _s();\n\n  const currentUser = auth.currentUser;\n  const {\n    email\n  } = currentUser;\n  const [display, setDisplay] = useState(false);\n  const [passwordForm, setPasswordForm] = useState(\"\");\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const addPassword = async () => {\n    const emailCredential = EmailAuthProvider.credential(email, passwordForm);\n    setStatus(\"Reauthenticating...\");\n    await reauthenticateWithPopup(currentUser, googleAuth).then(async () => {\n      setStatus(\"Checking password...\");\n\n      if (passwordForm === passwordCheck) {\n        setStatus(\"Creating new login credentials...\");\n        await linkWithCredential(currentUser, emailCredential).then(userCredential => {\n          alert(`You can now sign in with email and password.`);\n          setPasswordForm(\"\");\n          setPasswordCheck(\"\");\n          props.setKeyForRemount(2);\n        }).catch(error => {\n          setStatus(`${error.message}`);\n        });\n      } else {\n        setStatus(\"Passwords did not match! Try again.\");\n        setPasswordForm(\"\");\n        setPasswordCheck(\"\");\n      }\n    }).catch(error => {\n      setStatus(`${error.message}`);\n    });\n  };\n\n  const addGoogle = async () => {\n    setStatus(\"Reauthenticating...\");\n    await props.reauthenticate(passwordForm.current);\n    setStatus(\"Sign in to your Google account.\");\n    linkWithPopup(currentUser, googleAuth).then(result => {\n      alert(`You can now sign in with your Google account.`);\n      setPasswordForm(\"\");\n      props.setKeyForRemount(2);\n    }).catch(error => {\n      setStatus(`${error.message}`);\n    });\n  };\n  /* return if account has less than 2 sign in providers (Google and email/password are only options offered) */\n\n\n  return props.providerIdList.length < 2 && /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"border-b-2 border-blue-200 settings-section\",\n    children: [props.providerIdList.includes(\"google.com\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading hover:cursor-pointer hover:text-blue-500\",\n        onClick: () => setDisplay(!display),\n        children: [\"Add a Password\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `ri-arrow-${display ? \"up\" : \"down\"}-s-line align-sub`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), display && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm m-w-[90%]\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"If you would like to add email/password sign in to your account, create a password below.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You will be prompted to sign in with Google again.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email associated with this account: \", email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Create a password\",\n          className: \"form-input\",\n          value: passwordForm,\n          onChange: e => setPasswordForm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Re-type password\",\n          className: \"form-input\",\n          value: passwordCheck,\n          onChange: e => setPasswordCheck(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          disabled: !passwordForm || !passwordCheck,\n          onClick: addPassword,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true), props.providerIdList.includes(\"password\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading hover:cursor-pointer hover:text-blue-500\",\n        onClick: () => setDisplay(!display),\n        children: [\"Link Your Google Account\", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `ri-arrow-${display ? \"up\" : \"down\"}-s-line align-sub`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), display && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          className: \"form-input\",\n          value: passwordForm,\n          onChange: e => setPasswordForm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"p-1.5 btn\",\n          onClick: addGoogle,\n          disabled: !passwordForm,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"p-1 text-blue-600 rounded ri-google-fill bg-slate-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 19\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"align-top\",\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this);\n}\n\n_s(AddSignin, \"GTwDH57T9HrARD4bVAewXPejXGI=\");\n\n_c = AddSignin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSignin\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/user-settings-page/AddSignin.js"],"names":["useState","auth","googleAuth","EmailAuthProvider","linkWithCredential","linkWithPopup","reauthenticateWithPopup","AddSignin","props","currentUser","email","display","setDisplay","passwordForm","setPasswordForm","passwordCheck","setPasswordCheck","status","setStatus","addPassword","emailCredential","credential","then","userCredential","alert","setKeyForRemount","catch","error","message","addGoogle","reauthenticate","current","result","providerIdList","length","includes","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { auth, googleAuth } from \"../../backend/firebase-config\";\r\nimport {\r\n  EmailAuthProvider,\r\n  linkWithCredential,\r\n  linkWithPopup,\r\n  reauthenticateWithPopup,\r\n} from \"firebase/auth\";\r\n\r\nexport default function AddSignin(props) {\r\n  const currentUser = auth.currentUser;\r\n  const { email } = currentUser;\r\n\r\n  const [display, setDisplay] = useState(false);\r\n\r\n  const [passwordForm, setPasswordForm] = useState(\"\");\r\n  const [passwordCheck, setPasswordCheck] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n\r\n  const addPassword = async () => {\r\n    const emailCredential = EmailAuthProvider.credential(email, passwordForm);\r\n\r\n    setStatus(\"Reauthenticating...\");\r\n\r\n    await reauthenticateWithPopup(currentUser, googleAuth)\r\n      .then(async () => {\r\n        setStatus(\"Checking password...\");\r\n\r\n        if (passwordForm === passwordCheck) {\r\n          setStatus(\"Creating new login credentials...\");\r\n          await linkWithCredential(currentUser, emailCredential)\r\n            .then((userCredential) => {\r\n              alert(`You can now sign in with email and password.`);\r\n              setPasswordForm(\"\");\r\n              setPasswordCheck(\"\");\r\n              props.setKeyForRemount(2);\r\n            })\r\n            .catch((error) => {\r\n              setStatus(`${error.message}`);\r\n            });\r\n        } else {\r\n          setStatus(\"Passwords did not match! Try again.\");\r\n          setPasswordForm(\"\");\r\n          setPasswordCheck(\"\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setStatus(`${error.message}`);\r\n      });\r\n  };\r\n\r\n  const addGoogle = async () => {\r\n    setStatus(\"Reauthenticating...\");\r\n\r\n    await props.reauthenticate(passwordForm.current);\r\n\r\n    setStatus(\"Sign in to your Google account.\");\r\n\r\n    linkWithPopup(currentUser, googleAuth)\r\n      .then((result) => {\r\n        alert(`You can now sign in with your Google account.`);\r\n        setPasswordForm(\"\");\r\n        props.setKeyForRemount(2);\r\n      })\r\n      .catch((error) => {\r\n        setStatus(`${error.message}`);\r\n      });\r\n  };\r\n\r\n  /* return if account has less than 2 sign in providers (Google and email/password are only options offered) */\r\n\r\n  return (\r\n    props.providerIdList.length < 2 && (\r\n      <section className=\"border-b-2 border-blue-200 settings-section\">\r\n        {/* Displays add password sign in if the user only has Google option */}\r\n        {props.providerIdList.includes(\"google.com\") && (\r\n          <>\r\n            <h2\r\n              className=\"blue-heading hover:cursor-pointer hover:text-blue-500\"\r\n              onClick={() => setDisplay(!display)}\r\n            >\r\n              Add a Password\r\n              <i\r\n                className={`ri-arrow-${\r\n                  display ? \"up\" : \"down\"\r\n                }-s-line align-sub`}\r\n              ></i>\r\n            </h2>\r\n            {display && (\r\n              <>\r\n                <div className=\"text-sm m-w-[90%]\">\r\n                  <p>\r\n                    If you would like to add email/password sign in to your\r\n                    account, create a password below.\r\n                  </p>\r\n                  <p>You will be prompted to sign in with Google again.</p>\r\n                  <p>Email associated with this account: {email}</p>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Create a password\"\r\n                  className=\"form-input\"\r\n                  value={passwordForm}\r\n                  onChange={(e) => setPasswordForm(e.target.value)}\r\n                />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Re-type password\"\r\n                  className=\"form-input\"\r\n                  value={passwordCheck}\r\n                  onChange={(e) => setPasswordCheck(e.target.value)}\r\n                />\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn\"\r\n                  disabled={!passwordForm || !passwordCheck}\r\n                  onClick={addPassword}\r\n                >\r\n                  Submit\r\n                </button>\r\n                <p>{status}</p>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {/* Displays add Google sign in if the user only has email/password option */}\r\n\r\n        {props.providerIdList.includes(\"password\") && (\r\n          <>\r\n            <h2\r\n              className=\"blue-heading hover:cursor-pointer hover:text-blue-500\"\r\n              onClick={() => setDisplay(!display)}\r\n            >\r\n              Link Your Google Account\r\n              <i\r\n                className={`ri-arrow-${\r\n                  display ? \"up\" : \"down\"\r\n                }-s-line align-sub`}\r\n              ></i>\r\n            </h2>\r\n            {display && (\r\n              <>\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  className=\"form-input\"\r\n                  value={passwordForm}\r\n                  onChange={(e) => setPasswordForm(e.target.value)}\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"p-1.5 btn\"\r\n                  onClick={addGoogle}\r\n                  disabled={!passwordForm}\r\n                >\r\n                  <i className=\"p-1 text-blue-600 rounded ri-google-fill bg-slate-50\"></i>{\" \"}\r\n                  <span className=\"align-top\">Sign in with Google</span>\r\n                </button>\r\n                <p>{status}</p>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </section>\r\n    )\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}