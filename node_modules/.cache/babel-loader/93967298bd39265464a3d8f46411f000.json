{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { useEffect, useRef } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatRoom(props, _ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const dummy = useRef();\n  useEffect(() => props.messages && dummy.current.scrollIntoView({\n    behavior: \"smooth\"\n  }), [props.messages]);\n\n  if (props.loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  } else if (props.error) {\n    return /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [children, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        ref: dummy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n/*\r\ntodo:\r\n- user generated chatrooms\r\n- private messaging\r\n- switchable dark mode\r\n- allow users to load previous messages after scrolling up\r\n- allow users to view other user profiles\r\n- timestamp messages\r\n*/\n\n_s(ChatRoom, \"fFNqa6aEa3ZEo2bTPKl+BMhEn6c=\");\n\n_c = ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/ChatRoom.js"],"names":["Error","Loading","useEffect","useRef","ChatMessage","ChatRoom","props","children","dummy","messages","current","scrollIntoView","behavior","loading","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,QAAuC;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACpD,QAAMC,KAAK,GAAGL,MAAM,EAApB;AAEAD,EAAAA,SAAS,CACP,MACEI,KAAK,CAACG,QAAN,IAAkBD,KAAK,CAACE,OAAN,CAAcC,cAAd,CAA6B;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAA7B,CAFb,EAGP,CAACN,KAAK,CAACG,QAAP,CAHO,CAAT;;AAMA,MAAIH,KAAK,CAACO,OAAV,EAAmB;AACjB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIP,KAAK,CAACQ,KAAV,EAAiB;AACtB,wBAAO,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,iBACGP,QADH,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;AACF;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;GA/BwBH,Q;;KAAAA,Q","sourcesContent":["import Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport ChatMessage from \"./ChatMessage\";\r\n\r\nexport default function ChatRoom(props, { children }) {\r\n  const dummy = useRef();\r\n\r\n  useEffect(\r\n    () =>\r\n      props.messages && dummy.current.scrollIntoView({ behavior: \"smooth\" }),\r\n    [props.messages]\r\n  );\r\n\r\n  if (props.loading) {\r\n    return <Loading />;\r\n  } else if (props.error) {\r\n    return <Error />;\r\n  } else {\r\n    return (\r\n      <>\r\n        {children}\r\n        <div className=\"mt-2\" ref={dummy}></div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\ntodo:\r\n- user generated chatrooms\r\n- private messaging\r\n- switchable dark mode\r\n- allow users to load previous messages after scrolling up\r\n- allow users to view other user profiles\r\n- timestamp messages\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}