{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\CreateChat.js\",\n    _s = $RefreshSig$();\n\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, serverTimestamp, addDoc, doc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateChat(_ref) {\n  _s();\n\n  let {\n    user,\n    roomSelection,\n    setRoomSelection,\n    setRoomName\n  } = _ref;\n  const [createRoomName, setCreateRoomName] = useState(\"\");\n  const [createRoomStatus, setCreateRoomStatus] = useState(\"\");\n  const [selectedRoomToDelete, setSelectedRoomToDelete] = useState(\"\");\n  const [confirmDelete, setConfirmDelete] = useState(\"\");\n  const [deleteStatus, setDeleteStatus] = useState(\"Select a room below\");\n  const accountRef = doc(db, \"accounts\", user.uid);\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\n  const publicChatsRef = collection(db, \"publicChats\");\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\n  const [publicChats, loading, error, snapshot] = useCollectionData(publicChatsQ);\n\n  const createRoom = async () => {\n    setCreateRoomStatus(\"Creating room...\");\n    await addDoc(collection(db, `publicChats`), {\n      createdAt: serverTimestamp(),\n      creator: account.name,\n      moderatorUID: user.uid,\n      name: createRoomName\n    }).then(() => {\n      setCreateRoomStatus(\"Opening room: \" + createRoomName);\n      setRoomSelection(createRoomName);\n      setRoomName(createRoomName);\n      setCreateRoomStatus(createRoomName + \" is now live!\");\n      setCreateRoomName(\"\");\n      setTimeout(() => setCreateRoomStatus(\"\"), 5000);\n    });\n  };\n\n  const deleteRoom = async () => {\n    if (confirmDelete === \"DELETE\") {} else {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"border-b-2 border-blue-200 settings-section \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading\",\n        children: \"Create a chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter room name / topic\",\n        className: \"form-input\",\n        value: createRoomName,\n        onChange: e => setCreateRoomName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: createRoom,\n        disabled: !createRoomName,\n        children: \"Create Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: createRoomStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"settings-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"blue-heading\",\n        children: \"Delete a chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm\",\n        children: deleteStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), selectedRoomToDelete && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Select below, then type DELETE\",\n          className: \"form-input\",\n          value: confirmDelete,\n          disabled: !selectedRoomToDelete,\n          onChange: e => setConfirmDelete(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: deleteRoom,\n          disabled: !confirmDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), publicChats && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: publicChats.map((chatroom, index) => {\n          if (chatroom.moderatorUID === user.uid) {\n            const roomID = snapshot._snapshot.docChanges[index].doc.key.path.segments[6];\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `rounded px-1 hover:cursor-pointer ${roomID === selectedRoomToDelete ? \"bg-blue-50/25\" : \"hover:bg-blue-50/50 hover:text-blue-600\"}`,\n              onClick: async () => {\n                await setSelectedRoomToDelete(selectedRoomToDelete === roomID ? \"\" : roomID).then(() => setDeleteStatus(!selectedRoomToDelete ? \"Select a room below\" : \"Type 'DELETE' below, then click 'Delete'\"));\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: `ri-checkbox${roomID !== selectedRoomToDelete ? \"-blank-line\" : \"-line\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"align-top\",\n                children: [\" \", chatroom.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this);\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CreateChat, \"LtkUbStKL1Y+qzA8kYRRVcZ9+Yg=\", false, function () {\n  return [useDocumentData, useCollectionData];\n});\n\n_c = CreateChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateChat\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/CreateChat.js"],"names":["useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","serverTimestamp","addDoc","doc","useState","useRef","useEffect","auth","db","CreateChat","user","roomSelection","setRoomSelection","setRoomName","createRoomName","setCreateRoomName","createRoomStatus","setCreateRoomStatus","selectedRoomToDelete","setSelectedRoomToDelete","confirmDelete","setConfirmDelete","deleteStatus","setDeleteStatus","accountRef","uid","account","accountLoading","accountError","publicChatsRef","publicChatsQ","publicChats","loading","error","snapshot","createRoom","createdAt","creator","name","moderatorUID","then","setTimeout","deleteRoom","e","target","value","map","chatroom","index","roomID","_snapshot","docChanges","key","path","segments"],"mappings":"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","sourcesContent":["import {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\n\r\nexport default function CreateChat({\r\n  user,\r\n  roomSelection,\r\n  setRoomSelection,\r\n  setRoomName,\r\n}) {\r\n  const [createRoomName, setCreateRoomName] = useState(\"\");\r\n  const [createRoomStatus, setCreateRoomStatus] = useState(\"\");\r\n\r\n  const [selectedRoomToDelete, setSelectedRoomToDelete] = useState(\"\");\r\n  const [confirmDelete, setConfirmDelete] = useState(\"\");\r\n  const [deleteStatus, setDeleteStatus] = useState(\"Select a room below\");\r\n\r\n  const accountRef = doc(db, \"accounts\", user.uid);\r\n  const [account, accountLoading, accountError] = useDocumentData(accountRef);\r\n\r\n  const publicChatsRef = collection(db, \"publicChats\");\r\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [publicChats, loading, error, snapshot] =\r\n    useCollectionData(publicChatsQ);\r\n\r\n  const createRoom = async () => {\r\n    setCreateRoomStatus(\"Creating room...\");\r\n    await addDoc(collection(db, `publicChats`), {\r\n      createdAt: serverTimestamp(),\r\n      creator: account.name,\r\n      moderatorUID: user.uid,\r\n      name: createRoomName,\r\n    }).then(() => {\r\n      setCreateRoomStatus(\"Opening room: \" + createRoomName);\r\n      setRoomSelection(createRoomName);\r\n      setRoomName(createRoomName);\r\n      setCreateRoomStatus(createRoomName + \" is now live!\");\r\n      setCreateRoomName(\"\");\r\n      setTimeout(() => setCreateRoomStatus(\"\"), 5000);\r\n    });\r\n  };\r\n\r\n  const deleteRoom = async () => {\r\n    if (confirmDelete === \"DELETE\") {\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"border-b-2 border-blue-200 settings-section \">\r\n        <h2 className=\"blue-heading\">Create a chat</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter room name / topic\"\r\n          className=\"form-input\"\r\n          value={createRoomName}\r\n          onChange={(e) => setCreateRoomName(e.target.value)}\r\n        />\r\n        <button className=\"btn\" onClick={createRoom} disabled={!createRoomName}>\r\n          Create Chat\r\n        </button>\r\n        <p>{createRoomStatus}</p>\r\n      </section>\r\n\r\n      <section className=\"settings-section\">\r\n        <h2 className=\"blue-heading\">Delete a chat</h2>\r\n        <p className=\"text-sm\">{deleteStatus}</p>\r\n        {selectedRoomToDelete && (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Select below, then type DELETE\"\r\n              className=\"form-input\"\r\n              value={confirmDelete}\r\n              disabled={!selectedRoomToDelete}\r\n              onChange={(e) => setConfirmDelete(e.target.value)}\r\n            />\r\n            <button\r\n              className=\"btn\"\r\n              onClick={deleteRoom}\r\n              disabled={!confirmDelete}\r\n            >\r\n              Delete\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {publicChats && (\r\n          <ul>\r\n            {publicChats.map((chatroom, index) => {\r\n              if (chatroom.moderatorUID === user.uid) {\r\n                const roomID =\r\n                  snapshot._snapshot.docChanges[index].doc.key.path.segments[6];\r\n                return (\r\n                  <li\r\n                    className={`rounded px-1 hover:cursor-pointer ${\r\n                      roomID === selectedRoomToDelete\r\n                        ? \"bg-blue-50/25\"\r\n                        : \"hover:bg-blue-50/50 hover:text-blue-600\"\r\n                    }`}\r\n                    key={index}\r\n                    onClick={async() => {\r\n                      await setSelectedRoomToDelete(\r\n                        selectedRoomToDelete === roomID ? \"\" : roomID\r\n                      ).then(() => setDeleteStatus(\r\n                       !selectedRoomToDelete\r\n                          ? \"Select a room below\"\r\n                          : \"Type 'DELETE' below, then click 'Delete'\"\r\n                      ))\r\n\r\n                      \r\n                    }}\r\n                  >\r\n                    <i\r\n                      className={`ri-checkbox${\r\n                        roomID !== selectedRoomToDelete\r\n                          ? \"-blank-line\"\r\n                          : \"-line\"\r\n                      }`}\r\n                    ></i>\r\n                    <span className=\"align-top\"> {chatroom.name}</span>\r\n                  </li>\r\n                );\r\n              }\r\n            })}\r\n          </ul>\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}