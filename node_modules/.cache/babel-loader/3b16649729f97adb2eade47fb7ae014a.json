{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\Documents\\\\1-Web-Projects\\\\cloud-chat\\\\src\\\\components\\\\PrivateChats.js\",\n    _s = $RefreshSig$();\n\nimport defaultPic from \"../images/cloud-fill.png\";\nimport { useCollectionData, useDocumentData } from \"react-firebase-hooks/firestore\";\nimport Error from \"./Error\";\nimport Loading from \"./Loading\";\nimport { collection, orderBy, query, limitToLast, getDoc, serverTimestamp, addDoc, doc } from \"firebase/firestore\";\nimport { useState, useRef, useEffect } from \"react\";\nimport { auth, db } from \"../backend/firebase-config\";\nimport PrivateChatUser from \"./PrivateChatUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateChats(_ref) {\n  _s();\n\n  let {\n    user,\n    accountSelection,\n    setAccountSelection,\n    setScreen\n  } = _ref;\n  const privateChatsRef = collection(db, \"accounts\", user.uid, \"privateChats\");\n  const privateChatsQ = query(privateChatsRef, orderBy(\"withUser\"), limitToLast(25));\n  const [privateChats, privateChatsLoading, privateChatsError] = useCollectionData(privateChatsQ);\n\n  if (privateChatsLoading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  } else if (privateChatsError) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      error: privateChatsError,\n      content: \"private chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: privateChats.map((chat, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [chat.chatID, /*#__PURE__*/_jsxDEV(PrivateChatUser, {\n            chat: chat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 47\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\n/*\r\ncreate a component like ChatMessage that takes props and grabs user data for each private chat\r\n*/\n\n_s(PrivateChats, \"YeWOk/Um4V2rREO1+oeuUNBXdhE=\", false, function () {\n  return [useCollectionData];\n});\n\n_c = PrivateChats;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateChats\");","map":{"version":3,"sources":["C:/Users/jason/Documents/1-Web-Projects/cloud-chat/src/components/PrivateChats.js"],"names":["defaultPic","useCollectionData","useDocumentData","Error","Loading","collection","orderBy","query","limitToLast","getDoc","serverTimestamp","addDoc","doc","useState","useRef","useEffect","auth","db","PrivateChatUser","PrivateChats","user","accountSelection","setAccountSelection","setScreen","privateChatsRef","uid","privateChatsQ","privateChats","privateChatsLoading","privateChatsError","map","chat","index","chatID"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,SACEC,iBADF,EAEEC,eAFF,QAGO,gCAHP;AAIA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,UADF,EAEEC,OAFF,EAGEC,KAHF,EAIEC,WAJF,EAKEC,MALF,EAMEC,eANF,EAOEC,MAPF,EAQEC,GARF,QASO,oBATP;AAUA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,4BAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,SAASC,YAAT,OAKZ;AAAA;;AAAA,MALkC;AACnCC,IAAAA,IADmC;AAEnCC,IAAAA,gBAFmC;AAGnCC,IAAAA,mBAHmC;AAInCC,IAAAA;AAJmC,GAKlC;AACD,QAAMC,eAAe,GAAGnB,UAAU,CAACY,EAAD,EAAK,UAAL,EAAiBG,IAAI,CAACK,GAAtB,EAA2B,cAA3B,CAAlC;AACA,QAAMC,aAAa,GAAGnB,KAAK,CACzBiB,eADyB,EAEzBlB,OAAO,CAAC,UAAD,CAFkB,EAGzBE,WAAW,CAAC,EAAD,CAHc,CAA3B;AAKA,QAAM,CAACmB,YAAD,EAAeC,mBAAf,EAAoCC,iBAApC,IACJ5B,iBAAiB,CAACyB,aAAD,CADnB;;AAGA,MAAIE,mBAAJ,EAAyB;AACvB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIC,iBAAJ,EAAuB;AAC5B,wBAAO,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,iBAAd;AAAiC,MAAA,OAAO,EAAE;AAA1C;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA;AACL,wBACE;AAAA,gBACGF,YAAY,CAACG,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,4BAAO;AAAA,qBAAiBD,IAAI,CAACE,MAAtB,eAA6B,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAA7B;AAAA,WAASC,KAAT;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;AACF;AAED;AACA;AACA;;GAhCwBb,Y;UAapBlB,iB;;;KAboBkB,Y","sourcesContent":["import defaultPic from \"../images/cloud-fill.png\";\r\nimport {\r\n  useCollectionData,\r\n  useDocumentData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"./Error\";\r\nimport Loading from \"./Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n  getDoc,\r\n  serverTimestamp,\r\n  addDoc,\r\n  doc,\r\n} from \"firebase/firestore\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { auth, db } from \"../backend/firebase-config\";\r\nimport PrivateChatUser from \"./PrivateChatUser\";\r\n\r\nexport default function PrivateChats({\r\n  user,\r\n  accountSelection,\r\n  setAccountSelection,\r\n  setScreen,\r\n}) {\r\n  const privateChatsRef = collection(db, \"accounts\", user.uid, \"privateChats\");\r\n  const privateChatsQ = query(\r\n    privateChatsRef,\r\n    orderBy(\"withUser\"),\r\n    limitToLast(25)\r\n  );\r\n  const [privateChats, privateChatsLoading, privateChatsError] =\r\n    useCollectionData(privateChatsQ);\r\n\r\n  if (privateChatsLoading) {\r\n    return <Loading />;\r\n  } else if (privateChatsError) {\r\n    return <Error error={privateChatsError} content={\"private chats\"} />;\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {privateChats.map((chat, index) => {\r\n          return <li key={index}>{chat.chatID}<PrivateChatUser chat={chat}/></li>;\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\ncreate a component like ChatMessage that takes props and grabs user data for each private chat\r\n*/"]},"metadata":{},"sourceType":"module"}