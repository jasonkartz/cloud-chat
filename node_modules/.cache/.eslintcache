[{"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\index.js":"1","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\App.js":"2","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\backend\\firebase-config.js":"3","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\SignIn.js":"4","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdateProfileImage.js":"5","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdateUserName.js":"6","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdateName.js":"7","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdateEmail.js":"8","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdatePassword.js":"9","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\DeleteAccount.js":"10","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\AddSignin.js":"11","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\DropMenu.js":"12","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UserSettings.js":"13","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\Main.js":"14","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\public-chats\\PublicChats.js":"15","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\public-chats\\CreateChat.js":"16","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\header\\Header.js":"17","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\header\\UserDisplay.js":"18","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\private-chats\\PrivateChats.js":"19","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\private-chats\\PrivateChatUser.js":"20","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\messaging\\MessageForm.js":"21","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\messaging\\ChatMessage.js":"22","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\users\\UserList.js":"23","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\users\\UserProfile.js":"24","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\loading-error-display\\Error.js":"25","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\loading-error-display\\Loading.js":"26","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\users\\FollowList.js":"27","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\users\\DefaultScreen.js":"28"},{"size":215,"mtime":1650984563116,"results":"29","hashOfConfig":"30"},{"size":4050,"mtime":1651337568348,"results":"31","hashOfConfig":"30"},{"size":817,"mtime":1650984563244,"results":"32","hashOfConfig":"30"},{"size":6071,"mtime":1650990083956,"results":"33","hashOfConfig":"30"},{"size":3655,"mtime":1650984562942,"results":"34","hashOfConfig":"30"},{"size":1613,"mtime":1650984562943,"results":"35","hashOfConfig":"30"},{"size":1688,"mtime":1650984563248,"results":"36","hashOfConfig":"30"},{"size":2545,"mtime":1650984563247,"results":"37","hashOfConfig":"30"},{"size":2561,"mtime":1650984563249,"results":"38","hashOfConfig":"30"},{"size":6561,"mtime":1651344316756,"results":"39","hashOfConfig":"30"},{"size":5402,"mtime":1650984563246,"results":"40","hashOfConfig":"30"},{"size":3954,"mtime":1651198400377,"results":"41","hashOfConfig":"30"},{"size":3528,"mtime":1651343531059,"results":"42","hashOfConfig":"30"},{"size":9000,"mtime":1651345602676,"results":"43","hashOfConfig":"30"},{"size":2050,"mtime":1651337489344,"results":"44","hashOfConfig":"30"},{"size":1915,"mtime":1651335702224,"results":"45","hashOfConfig":"30"},{"size":1389,"mtime":1651358705530,"results":"46","hashOfConfig":"30"},{"size":1345,"mtime":1651338606771,"results":"47","hashOfConfig":"30"},{"size":1717,"mtime":1651338374893,"results":"48","hashOfConfig":"30"},{"size":1423,"mtime":1651335639991,"results":"49","hashOfConfig":"30"},{"size":541,"mtime":1651345441858,"results":"50","hashOfConfig":"30"},{"size":3679,"mtime":1651335612513,"results":"51","hashOfConfig":"30"},{"size":2098,"mtime":1651335803190,"results":"52","hashOfConfig":"30"},{"size":6064,"mtime":1651340240551,"results":"53","hashOfConfig":"30"},{"size":265,"mtime":1650984562647,"results":"54","hashOfConfig":"30"},{"size":266,"mtime":1650984562935,"results":"55","hashOfConfig":"30"},{"size":1781,"mtime":1651336805319,"results":"56","hashOfConfig":"30"},{"size":2267,"mtime":1651340242054,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"168iezm",{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"61"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"61"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\index.js",[],[],["147","148"],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\App.js",["149","150","151"],[],"import \"./index.css\";\r\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\r\nimport {\r\n  doc,\r\n  setDoc,\r\n  serverTimestamp,\r\n} from \"firebase/firestore\";\r\nimport { ref } from \"firebase/storage\";\r\nimport { auth, db, storage } from \"./backend/firebase-config\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useDownloadURL } from \"react-firebase-hooks/storage\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Loading from \"./components/loading-error-display/Loading\";\r\nimport Error from \"./components/loading-error-display/Error\";\r\nimport Main from \"./components/Main\";\r\nimport SignIn from \"./components/SignIn\";\r\n\r\nfunction App() {\r\n  /* user auth state - displays signin if auth state is false*/\r\n  const [user, userLoading, userError] = useAuthState(auth);\r\n\r\n  /* theme */\r\n\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [systemTheme, setSystemTheme] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      localStorage.theme === \"dark\" ||\r\n      (!(\"theme\" in localStorage) &&\r\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\r\n    ) {\r\n      setDarkMode(true);\r\n    } else {\r\n      setDarkMode(false);\r\n    }\r\n\r\n    if (localStorage.systemTheme) {\r\n      setSystemTheme(true);\r\n    } else {\r\n      setSystemTheme(false)\r\n    }\r\n  }, []);\r\n\r\n  const cloudImg =\r\n    \"https://firebasestorage.googleapis.com/v0/b/chat-tut-d42b0.appspot.com/o/defaultImage%2Fcloud-fill.png?alt=media&token=4b7dbe8f-725f-4a8e-a2af-eed08b439550\";\r\n\r\n  const [registerData, setRegisterData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    passwordCheck: \"\",\r\n  });\r\n\r\n  const [registerMessage, setRegisterMessage] = useState(\"\");\r\n\r\n  const registerUser = async () => {\r\n    const { name, email, username, password, passwordCheck } = registerData;\r\n    setRegisterMessage(\"Signing up...\");\r\n    if (password === passwordCheck) {\r\n      await createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async (userCredential) => {\r\n          if (userCredential.user) {\r\n            const { uid } = auth.currentUser;\r\n            const accountRef = doc(db, \"accounts\", uid);\r\n            await updateProfile(auth.currentUser, { displayName: name }).then(\r\n              () => {\r\n                setDoc(accountRef, {\r\n                  uid: uid,\r\n                  name: name,\r\n                  userName: username,\r\n                  email: email,\r\n                  photoURL: cloudImg,\r\n                  lastLogin: serverTimestamp(),\r\n                  following: [],\r\n                  followers: [],\r\n                });\r\n              }\r\n            );\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setRegisterMessage(error.code + \" \" + error.message);\r\n          setTimeout(() => setRegisterMessage(\"\"), 5000);\r\n        });\r\n    } else {\r\n      setRegisterMessage(\"Passwords did not match! Try again.\");\r\n      setRegisterData({\r\n        ...registerData,\r\n        password: \"\",\r\n        passwordCheck: \"\",\r\n      });\r\n      setTimeout(() => setRegisterMessage(\"\"), 5000);\r\n    }\r\n  };\r\n\r\n  if (userLoading) {\r\n    return <Loading />;\r\n  } else if (userError) {\r\n    return <Error error={userError} content={\"user data\"} />;\r\n  } else {\r\n    return (\r\n      <div className={`${darkMode && \"dark\"}`}>\r\n        {user && (\r\n          <Main\r\n            user={user}\r\n            userLoading={userLoading}\r\n            userError={userError}\r\n            cloudImg={cloudImg}\r\n            darkMode={darkMode}\r\n            setDarkMode={setDarkMode}\r\n            systemTheme={systemTheme}\r\n            setSystemTheme={setSystemTheme}\r\n          />\r\n        )}\r\n        {user === null && (\r\n          <SignIn\r\n            setRegisterData={setRegisterData}\r\n            registerData={registerData}\r\n            registerMessage={registerMessage}\r\n            setRegisterMessage={setRegisterMessage}\r\n            registerUser={registerUser}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\backend\\firebase-config.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\SignIn.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdateProfileImage.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdateUserName.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdateName.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdateEmail.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UpdatePassword.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\DeleteAccount.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\AddSignin.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\DropMenu.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\user-settings-page\\UserSettings.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\Main.js",["152"],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\public-chats\\PublicChats.js",["153"],[],"import {\r\n  useCollectionData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"../loading-error-display/Error\";\r\nimport Loading from \"../loading-error-display/Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"../../backend/firebase-config\";\r\n\r\nexport default function PublicChats({\r\n  chatSelection,\r\n  setChatSelection,\r\n  setOpenMenu,\r\n  children\r\n}) {\r\n  const publicChatsRef = collection(db, \"publicChats\");\r\n  const publicChatsQ = query(publicChatsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [publicChats, loading, error, snapshot] =\r\n    useCollectionData(publicChatsQ);\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Loading />\r\n      </>\r\n    );\r\n  } else if (error) {\r\n    return (\r\n      <>\r\n        <Error />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <section className=\"settings-section\" >{children}</section>\r\n        <h1 className=\"mb-1 border-b-2 heading border-blue-50\">Chats</h1>\r\n        <ul>\r\n          {publicChats.map((chatroom, index) => {\r\n            const chatID = chatroom.id;\r\n            return (\r\n              <li\r\n                className={`rounded px-1 ${\r\n                  chatID === chatSelection\r\n                    ? \"bg-blue-50/25 text-gray-700\"\r\n                    : \"chat-list-display\"\r\n                }`}\r\n                key={index}\r\n                onClick={() => {\r\n                  if (chatID !== chatSelection.id) {\r\n                    setChatSelection({\r\n                      id: chatID,\r\n                      name: chatroom.name,\r\n                      path: \"/publicChats/\" + chatID + \"/messages\",\r\n                    });\r\n                    setOpenMenu(false);\r\n                  }\r\n                }}\r\n              >\r\n                <span>\r\n                  {chatroom.name}\r\n                  {chatID === chatSelection.id && \" (Current room)\"}\r\n                </span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\public-chats\\CreateChat.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\header\\Header.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\header\\UserDisplay.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\private-chats\\PrivateChats.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\private-chats\\PrivateChatUser.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\messaging\\MessageForm.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\messaging\\ChatMessage.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\users\\UserList.js",["154"],[],"import defaultPic from \"../../images/cloud-fill.png\";\r\nimport {\r\n  useCollectionData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport Error from \"../loading-error-display/Error\";\r\nimport Loading from \"../loading-error-display/Loading\";\r\nimport {\r\n  collection,\r\n  orderBy,\r\n  query,\r\n  limitToLast,\r\n} from \"firebase/firestore\";\r\nimport { useState, } from \"react\";\r\nimport { db } from \"../../backend/firebase-config\";\r\n\r\nexport default function UserList({\r\n  user,\r\n  setAccountSelection,\r\n  setScreen,\r\n}) {\r\n\r\n  const [usersLimit, setUsersLimit] = useState(20);\r\n\r\n  const accountsRef = collection(db, \"accounts\");\r\n  const accountsQ = query(\r\n    accountsRef,\r\n    orderBy(\"name\"),\r\n    limitToLast(usersLimit)\r\n  );\r\n  const [accounts, loading, error, snapshot] = useCollectionData(accountsQ);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  } else if (error) {\r\n    return <Error />;\r\n  } else {\r\n    return (\r\n      <ul>\r\n        {accounts.map((account, index) => {\r\n          return (\r\n            account.uid !== user.uid && (\r\n              <li\r\n                className=\"user-list-display\"\r\n                key={index}\r\n                onClick={() => {\r\n                  setAccountSelection(account.uid);\r\n                  setScreen(\"profile\");\r\n                }}\r\n              >\r\n                <img\r\n                  src={account.photoURL || defaultPic}\r\n                  alt=\"user\"\r\n                  width=\"25\"\r\n                  className=\"self-center rounded\"\r\n                />\r\n                <span className=\"flex flex-col\">\r\n                  <p>{account.userName || account.name} </p>\r\n                  <p className=\"text-sm\">{account.userName && account.name}</p>\r\n                </span>\r\n              </li>\r\n            )\r\n          );\r\n        })}\r\n        {accounts.length === usersLimit && (\r\n          <li>\r\n            <button\r\n              className=\"load-more-btn\"\r\n              onClick={() => setUsersLimit(usersLimit + 20)}\r\n            >\r\n              Load more...\r\n            </button>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\users\\UserProfile.js",["155","156","157","158","159"],[],"import {\r\n  doc,\r\n  orderBy,\r\n  limitToLast,\r\n  collection,\r\n  setDoc,\r\n  updateDoc,\r\n  arrayRemove,\r\n  arrayUnion,\r\n  query,\r\n} from \"firebase/firestore\";\r\nimport {\r\n  useDocumentData,\r\n  useCollectionData,\r\n} from \"react-firebase-hooks/firestore\";\r\nimport { useState } from \"react\";\r\nimport { db } from \"../../backend/firebase-config\";\r\nimport FollowList from \"./FollowList\";\r\nimport DefaultScreen from \"./DefaultScreen\";\r\nimport Loading from \"../loading-error-display/Loading\";\r\nimport Error from \"../loading-error-display/Error\";\r\n\r\nexport default function Profile({\r\n  user,\r\n  accountSelection,\r\n  setAccountSelection,\r\n  setScreen,\r\n  setChatSelection,\r\n  setOpenMenu,\r\n  account,\r\n  accountLoading,\r\n  accountError,\r\n  accountRef,\r\n}) {\r\n  const [openFollowList, setOpenFollowList] = useState(false);\r\n  const [selectFollowList, setSelectFollowList] = useState(\"following\");\r\n\r\n  const selectedAccountRef = doc(db, \"accounts\", accountSelection);\r\n  const [selectedAccount, selectedAccountLoading, selectedAccountError] =\r\n    useDocumentData(selectedAccountRef);\r\n\r\n  const selectedAccountPrivateChatRef = doc(\r\n    db,\r\n    \"accounts\",\r\n    accountSelection,\r\n    \"privateChats\",\r\n    user.uid\r\n  );\r\n  const [\r\n    selectedAccountPrivateChat,\r\n    selectedAccountPrivateChatLoading,\r\n    selectedAccountPrivateChatError,\r\n  ] = useDocumentData(selectedAccountPrivateChatRef);\r\n\r\n  const userPrivateChatRef = doc(\r\n    db,\r\n    \"accounts\",\r\n    user.uid,\r\n    \"privateChats\",\r\n    accountSelection\r\n  );\r\n  const [userPrivateChat, userPrivateChatLoading, userPrivateChatError] =\r\n    useDocumentData(userPrivateChatRef);\r\n\r\n  const sendMessage = async () => {\r\n    if (userPrivateChat || selectedAccountPrivateChat) {\r\n      setChatSelection({\r\n        id: userPrivateChat.chatID,\r\n        name: `You and ${selectedAccount.userName || selectedAccount.name}`,\r\n        path: userPrivateChat.chatPath + \"/messages\",\r\n      });\r\n      setOpenMenu(false);\r\n    } else {\r\n      const userChatRef = doc(\r\n        db,\r\n        \"accounts\",\r\n        user.uid,\r\n        \"privateChats\",\r\n        selectedAccount.uid\r\n      );\r\n      const selectedAccountChatRef = doc(\r\n        db,\r\n        \"accounts\",\r\n        selectedAccount.uid,\r\n        \"privateChats\",\r\n        user.uid\r\n      );\r\n\r\n      const newChatRef = doc(collection(db, \"privateChats\"));\r\n      await setDoc(newChatRef, {\r\n        id: newChatRef.id,\r\n        users: [user.uid, selectedAccount.uid],\r\n      }).then(() => {\r\n        setDoc(userChatRef, {\r\n          chatID: newChatRef.id,\r\n          withUser: selectedAccount.uid,\r\n          chatPath: newChatRef.path,\r\n        });\r\n        setDoc(selectedAccountChatRef, {\r\n          chatID: newChatRef.id,\r\n          withUser: user.uid,\r\n          chatPath: newChatRef.path,\r\n        });\r\n        setChatSelection({\r\n          id: newChatRef.id,\r\n          name: `You and ${selectedAccount.userName || selectedAccount.name}`,\r\n          path: \"/privateChats/\" + newChatRef.id + \"/messages\",\r\n        });\r\n        setOpenMenu(false);\r\n      });\r\n    }\r\n  };\r\n\r\n  const followUser = async () => {\r\n    updateDoc(accountRef, {\r\n      following: arrayUnion(selectedAccount.uid),\r\n    });\r\n\r\n    updateDoc(selectedAccountRef, {\r\n      followers: arrayUnion(user.uid),\r\n    });\r\n  };\r\n\r\n  const unFollowUser = () => {\r\n    updateDoc(accountRef, {\r\n      following: arrayRemove(selectedAccount.uid),\r\n    });\r\n\r\n    updateDoc(selectedAccountRef, {\r\n      followers: arrayRemove(user.uid),\r\n    });\r\n  };\r\n\r\n  const accountsRef = collection(db, \"accounts\");\r\n  const accountsQ = query(accountsRef, orderBy(\"name\"), limitToLast(25));\r\n  const [accounts, accountsLoading, accountsError, snapshot] =\r\n    useCollectionData(accountsQ);\r\n\r\n  if (selectedAccountLoading || accountLoading) {\r\n    return <Loading />;\r\n  } else if (selectedAccountError || accountError) {\r\n    return <Error />;\r\n  } else {\r\n    const followCheck = account.following.includes(selectedAccount.uid);\r\n    const followBackCheck = selectedAccount.following.includes(account.uid);\r\n\r\n    const followDisplay =\r\n      followCheck && followBackCheck\r\n        ? \"Following eachother\"\r\n        : followCheck\r\n        ? \"Following\"\r\n        : followBackCheck\r\n        ? \"Follows you\"\r\n        : \"\";\r\n\r\n    return (\r\n      <>\r\n        <section className=\"settings-section\">\r\n          {openFollowList && (\r\n            <button\r\n              className=\"profile-back-btn\"\r\n              onClick={() => setOpenFollowList(false)}\r\n            >\r\n              <i className=\"ri-arrow-go-back-line\"></i>\r\n              <span> Back to profile</span>\r\n            </button>\r\n          )}\r\n          <div>\r\n            <h1 className=\"heading\">\r\n              {selectedAccount.userName || selectedAccount.name}\r\n            </h1>\r\n            {selectedAccount.userName && (\r\n              <p className=\"text-sm font-semibold\">{selectedAccount.name}</p>\r\n            )}\r\n            <p className=\"text-sm italic\">{followDisplay}</p>\r\n          </div>\r\n\r\n          {/* Default screen */}\r\n\r\n          {!openFollowList && (\r\n            <DefaultScreen\r\n              setOpenFollowList={setOpenFollowList}\r\n              setSelectFollowList={setSelectFollowList}\r\n              selectedAccount={selectedAccount}\r\n              user={user}\r\n              followCheck={followCheck}\r\n              unFollowUser={unFollowUser}\r\n              followUser={followUser}\r\n              sendMessage={sendMessage}\r\n              setScreen={setScreen}\r\n            />\r\n          )}\r\n        </section>\r\n\r\n        {/* Follower/Following Screen */}\r\n        \r\n        {openFollowList && (\r\n          <FollowList\r\n            selectFollowList={selectFollowList}\r\n            accountsLoading={accountsLoading}\r\n            accountsError={accountsError}\r\n            accounts={accounts}\r\n            selectedAccount={selectedAccount}\r\n            setAccountSelection={setAccountSelection}\r\n            setOpenFollowList={setOpenFollowList}\r\n            setScreen={setScreen}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}","C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\loading-error-display\\Error.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\loading-error-display\\Loading.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\users\\FollowList.js",[],[],"C:\\Users\\jason\\Documents\\1-Web-Projects\\cloud-chat\\src\\components\\users\\DefaultScreen.js",[],[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":8,"column":10,"nodeType":"166","messageId":"167","endLine":8,"endColumn":13},{"ruleId":"164","severity":1,"message":"168","line":9,"column":20,"nodeType":"166","messageId":"167","endLine":9,"endColumn":27},{"ruleId":"164","severity":1,"message":"169","line":11,"column":10,"nodeType":"166","messageId":"167","endLine":11,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":60,"column":6,"nodeType":"172","endLine":60,"endColumn":8,"suggestions":"173"},{"ruleId":"164","severity":1,"message":"174","line":22,"column":39,"nodeType":"166","messageId":"167","endLine":22,"endColumn":47},{"ruleId":"164","severity":1,"message":"174","line":30,"column":36,"nodeType":"166","messageId":"167","endLine":30,"endColumn":44},{"ruleId":"164","severity":1,"message":"175","line":51,"column":5,"nodeType":"166","messageId":"167","endLine":51,"endColumn":38},{"ruleId":"164","severity":1,"message":"176","line":52,"column":5,"nodeType":"166","messageId":"167","endLine":52,"endColumn":36},{"ruleId":"164","severity":1,"message":"177","line":62,"column":27,"nodeType":"166","messageId":"167","endLine":62,"endColumn":49},{"ruleId":"164","severity":1,"message":"178","line":62,"column":51,"nodeType":"166","messageId":"167","endLine":62,"endColumn":71},{"ruleId":"164","severity":1,"message":"174","line":136,"column":52,"nodeType":"166","messageId":"167","endLine":136,"endColumn":60},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-unused-vars","'ref' is defined but never used.","Identifier","unusedVar","'storage' is defined but never used.","'useDownloadURL' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account?.followers', 'account?.following', 'account?.userName', 'accountRef', and 'cloudImg'. Either include them or remove the dependency array.","ArrayExpression",["181"],"'snapshot' is assigned a value but never used.","'selectedAccountPrivateChatLoading' is assigned a value but never used.","'selectedAccountPrivateChatError' is assigned a value but never used.","'userPrivateChatLoading' is assigned a value but never used.","'userPrivateChatError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [account?.followers, account?.following, account?.userName, accountRef, cloudImg]",{"range":"184","text":"185"},[1805,1807],"[account?.followers, account?.following, account?.userName, accountRef, cloudImg]"]